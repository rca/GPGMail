/*
 *     Generated by class-dump 3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.
 */

#import "NSObject.h"

#import "NSURLDownloadDelegate.h"

@class MCError, MCMessage, MCMessageBody, NSArray, NSMutableDictionary, NSString;

@interface MCMimePart : NSObject <NSURLDownloadDelegate>
{
    id _encryptSignLock;
    NSArray *_messageSigners;
    MCError *_smimeError;
    struct _NSRange _range;
    id _parentOrBody;
    MCMimePart *_nextPart;
    long long _typeCode;
    long long _subtypeCode;
    NSString *_type;
    NSString *_subtype;
    NSMutableDictionary *_bodyParameters;
    NSString *_contentTransferEncoding;
    NSMutableDictionary *_otherIvars;
    BOOL _isMimeEncrypted;
    BOOL _isMimeSigned;
    MCMessageBody *_decryptedMessageBody;
    MCMessage *_decryptedMessage;
    id <MCMessageDataSource> _decryptedMessageDataSource;
}

@property(retain, nonatomic) id <MCMessageDataSource> decryptedMessageDataSource; // @synthesize decryptedMessageDataSource=_decryptedMessageDataSource;
@property(retain, nonatomic) MCMessage *decryptedMessage; // @synthesize decryptedMessage=_decryptedMessage;
@property(retain, nonatomic) MCMessageBody *decryptedMessageBody; // @synthesize decryptedMessageBody=_decryptedMessageBody;
@property(nonatomic) BOOL isMimeSigned; // @synthesize isMimeSigned=_isMimeSigned;
@property(nonatomic) BOOL isMimeEncrypted; // @synthesize isMimeEncrypted=_isMimeEncrypted;
@property(copy) NSString *contentTransferEncoding; // @synthesize contentTransferEncoding=_contentTransferEncoding;
- (void)setDecryptedMessageBody:(id)arg1 isEncrypted:(BOOL)arg2 isSigned:(BOOL)arg3 error:(id)arg4;
- (void)clearCachedDecryptedMessageBody;
- (id)decryptedMessageBodyIsEncrypted:(char *)arg1 isSigned:(char *)arg2 error:(id *)arg3;
- (id)_archiveForMultipartRelated;
- (id)webArchive;
- (id)parsedMessageWithContext:(id)arg1;
- (id)parsedMessage;
- (id)_createArchiveWithConvertedPlainTextBodyClassFromArchive:(id)arg1;
- (id)_archiveForFileWrapper:(id)arg1 URL:(id)arg2;
- (id)_archiveForString:(id)arg1 URL:(id)arg2 needsPlainTextBodyClass:(BOOL)arg3;
- (id)_archiveForData:(id)arg1 URL:(id)arg2 MIMEType:(id)arg3 textEncodingName:(id)arg4 frameName:(id)arg5;
- (id)_archiveForData:(id)arg1 URL:(id)arg2 MIMEType:(id)arg3 textEncodingName:(id)arg4 frameName:(id)arg5 subresources:(id)arg6 subframeArchives:(id)arg7;
- (id)decodedContent;
- (id)decodedContentWithContext:(id)arg1;
- (id)htmlStringForMimePart:(id)arg1 attachment:(id)arg2;
- (void)htmlString:(id *)arg1 createWebResource:(id *)arg2 forFileWrapper:(id)arg3 partNumber:(id)arg4;
- (id)textHtmlPart;
- (id)textPart;
- (id)signedData;
- (id)bestAlternative;
- (id)startPart;
- (void)configureFileWrapper:(id)arg1;
- (void)downloadDidFinish:(id)arg1;
- (void)download:(id)arg1 didFailWithError:(id)arg2;
- (void)download:(id)arg1 didReceiveDataOfLength:(unsigned long long)arg2;
- (void)download:(id)arg1 didReceiveResponse:(id)arg2;
- (id)_remoteFileWrapper;
- (id)fileWrapper;
- (id)attributedString;
- (id)_getMessageAttachment:(unsigned long long)arg1;
- (id)_getMessageAttachment:(unsigned long long)arg1 context:(id)arg2;
- (id)_createFileWrapper;
- (id)_newAttachment;
@property(readonly) BOOL isAutoArchivePart;
- (BOOL)usesKnownSignatureProtocol;
- (BOOL)isHTML;
- (BOOL)isRich;
- (BOOL)isAttachment;
- (BOOL)shouldConsiderInlineOverridingExchangeServer;
- (BOOL)isMessageExternalBodyWithURL;
- (id)_partThatIsAttachment;
- (void)markAsStationeryImage;
- (BOOL)isStationeryImage;
- (BOOL)isCalendar;
@property(readonly) BOOL isImage;
- (BOOL)isReadableText;
- (unsigned long long)approximateDecodedSize;
- (unsigned long long)approximateRawSize;
- (unsigned long long)textEncoding;
- (id)attachmentFilenames;
- (id)attachments;
- (void)getNumberOfAttachments:(unsigned int *)arg1 numberOfTNEFAttachments:(unsigned int *)arg2 isSigned:(char *)arg3 isEncrypted:(char *)arg4;
- (unsigned int)numberOfAttachments;
- (BOOL)hasCachedDataInStore;
@property(readonly) BOOL isEncrypted;
@property(readonly) BOOL isSigned;
- (id)attachmentFilename;
- (id)attachmentFilenameWithHiddenExtension:(char *)arg1;
- (id)description;
- (void)setMimeBody:(id)arg1;
- (id)mimeBody;
- (id)bodyConvertedFromFlowedText;
- (id)bodyData;
- (void)setRange:(struct _NSRange)arg1;
- (struct _NSRange)range;
- (void)addSubpart:(id)arg1;
- (void)setSubparts:(id)arg1;
- (id)subpartAtIndex:(long long)arg1;
- (id)subparts;
- (id)nextSiblingPart;
- (id)firstChildPart;
- (id)parentPart;
- (void)setLanguages:(id)arg1;
- (id)languages;
- (void)setContentLocation:(id)arg1;
- (id)contentLocation;
@property(readonly) NSString *contentIDURLString;
- (void)setContentID:(id)arg1;
- (id)contentID;
- (void)setContentDescription:(id)arg1;
- (id)contentDescription;
- (id)dispositionParameterKeys;
- (void)setDispositionParameter:(id)arg1 forKey:(id)arg2;
- (id)dispositionParameterForKey:(id)arg1;
- (void)setDisposition:(id)arg1;
- (id)disposition;
- (id)bodyParameterKeys;
- (void)setBodyParameter:(id)arg1 forKey:(id)arg2;
- (id)bodyParameterForKey:(id)arg1;
- (BOOL)isTypeCode:(long long)arg1 subtypeCode:(long long)arg2;
- (BOOL)isType:(id)arg1 subtype:(id)arg2;
- (void)setSubtype:(id)arg1;
- (id)subtype;
- (long long)subtypeCode;
- (void)setType:(id)arg1;
- (id)type;
- (long long)typeCode;
- (id)init;
- (void)dealloc;
- (void)renderString:(id)arg1;
- (BOOL)parseMimeBody;
- (BOOL)parseMimeBodyFetchIfNotAvailable:(BOOL)arg1 allowPartial:(BOOL)arg2;
- (id)partNumber;
- (void)_setupDictionary:(id *)arg1 fromArray:(id)arg2;
- (BOOL)parseIMAPPropertyList:(id)arg1;
- (id)decodeMultipartAppledoubleWithContext:(id)arg1;
- (id)decodeApplicationApplefileWithContext:(id)arg1;
- (id)decodeApplicationMac_binhex40WithContext:(id)arg1;
- (id)decodeMessageExternal_bodyWithContext:(id)arg1;
- (id)decodeMessagePartialWithContext:(id)arg1;
- (id)decodeMessageRfc822WithContext:(id)arg1;
- (id)decodeMessageDelivery_statusWithContext:(id)arg1;
- (id)decodeApplicationSmilWithContext:(id)arg1;
- (id)decodeApplicationZipWithContext:(id)arg1;
- (id)decodeApplicationOctet_streamWithContext:(id)arg1;
- (id)decodeApplicationApple_msg_composite_imageWithContext:(id)arg1;
- (id)decodeMultipartFolderWithContext:(id)arg1;
- (id)decodeMultipartRelatedWithContext:(id)arg1;
- (id)decodeMultipartAlternativeWithContext:(id)arg1;
- (id)decodeMultipartWithContext:(id)arg1;
- (id)decodeTextCalendarWithContext:(id)arg1;
- (id)decodeTextHtmlWithContext:(id)arg1;
- (id)decodeTextEnrichedWithContext:(id)arg1;
- (id)decodeTextRtfWithContext:(id)arg1;
- (id)decodeTextRichtextWithContext:(id)arg1;
- (id)decodeTextWithContext:(id)arg1;
- (id)decodeTextPlainWithContext:(id)arg1;
- (id)decode;
- (id)decodeWithContext:(id)arg1;
- (id)_fullMimeTypeEvenInsideAppleDouble;
- (id)copySignerLabels;
- (id)copyMessageSigners;
- (void)verifySignature;
- (BOOL)needsSignatureVerification:(id *)arg1;
- (id)decodeApplicationPkcs7_mimeWithContext:(id)arg1;
- (id)decodeMultipartSignedWithContext:(id)arg1;
- (id)_verifySignatureWithCMSDecoder:(struct _CMSDecoder *)arg1 againstSender:(id)arg2 signingError:(id *)arg3;
- (struct _CMSDecoder *)_newCMSDecoderWithMimePart:(id)arg1 error:(id *)arg2;
- (id)newEncryptedPartWithData:(id)arg1 recipients:(id)arg2 encryptedData:(id *)arg3;
- (id)newSignedPartWithData:(id)arg1 sender:(id)arg2 signatureData:(id *)arg3;
- (int)_addDataConvertingLineEndingsFromUnixToNetwork:(id)arg1 toCMSEncoder:(struct _CMSEncoder *)arg2;

@end

