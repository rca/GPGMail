/*
 *     Generated by class-dump 3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.
 */

#import "NSObject.h"

#import "MCConnectionLogging.h"

@class MCSaslClient, MCSocket, NSData, NSFileHandle;

@interface MCConnection : NSObject <MCConnectionLogging>
{
    MCSocket *_socket;
    void *_buffer;
    long long _bufferRemainingBytes;
    unsigned long long _bufferStart;
    unsigned long long _bufferLength;
    NSData *_logHeader;
    id <MCAccount> _account;
    id _accountLock;
    MCSaslClient *_saslClient;
    BOOL _isBackground;
    double _connectTimeout;
    double _readWriteTimeout;
    NSFileHandle *_logFile;
}

+ (BOOL)shouldLogActivityForHost:(id)arg1 port:(long long)arg2;
+ (void)setLogStreamEvents:(BOOL)arg1;
+ (BOOL)logStreamEvents;
+ (void)setLogActivityToFile:(BOOL)arg1;
+ (BOOL)logActivityToFile;
+ (void)setLogActivityOnHosts:(id)arg1;
+ (id)logActivityOnHosts;
+ (void)setLogActivityOnPorts:(id)arg1;
+ (id)logActivityOnPorts;
+ (void)setLogAllSocketActivity:(BOOL)arg1;
+ (BOOL)logAllSocketActivity;
+ (void)setLoggingDelegate:(id)arg1;
+ (id)loggingDelegate;
+ (BOOL)_defaultsToBackground;
+ (void)initialize;
@property(retain) NSFileHandle *logFile; // @synthesize logFile=_logFile;
@property BOOL isBackground; // @synthesize isBackground=_isBackground;
@property double readWriteTimeout; // @synthesize readWriteTimeout=_readWriteTimeout;
@property double connectTimeout; // @synthesize connectTimeout=_connectTimeout;
- (void)_resetLogHeaderWithPort:(long long)arg1;
- (void)_logToFileDidChange:(id)arg1;
- (void)_loggingDidChange:(id)arg1;
- (void)_logEventWithPrefix:(const char *)arg1 bytes:(const void *)arg2 length:(unsigned long long)arg3 maskStartIndex:(unsigned long long)arg4 maskLength:(unsigned long long)arg5;
- (void)flushLog;
- (void)logBytes:(void *)arg1 length:(unsigned long long)arg2;
- (void)logData:(id)arg1 range:(struct _NSRange)arg2;
- (void)logData:(id)arg1;
- (void)logString:(id)arg1;
- (BOOL)_isSSLError:(id)arg1;
- (void)_setupWriteErrorForMonitor;
- (void)_setupReadErrorForMonitor;
- (void)_setupSSLErrorForMonitorWithHostname:(id)arg1;
- (void)_setupConnectionErrorForMonitorWithPort:(long long)arg1 usingSSL:(BOOL)arg2;
- (BOOL)_writeData:(id)arg1 dontLogBytesInRange:(struct _NSRange)arg2 error:(id *)arg3;
- (long long)_readBytesFromSocketIntoBuffer:(void *)arg1 amount:(unsigned long long)arg2 requireAllBytes:(BOOL)arg3 error:(id *)arg4;
- (BOOL)_fillBuffer:(id *)arg1;
- (BOOL)_readBytesIntoData:(id)arg1 desiredLength:(unsigned long long)arg2 error:(id *)arg3;
- (BOOL)_readLineIntoData:(id)arg1 error:(id *)arg2;
- (BOOL)_hasBytesAvailable;
- (void)disconnect;
- (void)quit;
- (BOOL)isValid;
- (BOOL)reconnect;
- (void)discoverAccountSettings;
- (BOOL)_authenticateWithAuthenticator:(id)arg1;
- (BOOL)authenticate;
- (BOOL)_completeConnectionWithResult:(BOOL)arg1;
- (void)_setupConnection;
- (BOOL)_startTLS;
- (void)_setupSocketWithSecurityLayer:(long long)arg1;
- (id)_newConnectionAttempts;
- (BOOL)connectDiscoveringBestSettings:(BOOL)arg1;
- (void *)_socket;
- (id)authenticationMechanisms;
- (id)capabilities;
- (unsigned int)cipherKeyLength;
@property id <MCAccount> account;
- (void)dealloc;
- (id)description;
- (id)init;

@end

