/*
 *     Generated by class-dump 3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.
 */

#import "NSObject.h"

#import "MCMessageDataSource.h"

@class MCActivityMonitor, MFMailAccount, MFMailbox, NSCache, NSMutableArray, NSMutableDictionary, NSMutableSet, NSOperationQueue, NSTimer;

@interface MFMessageStore : NSObject <MCMessageDataSource>
{
    id _retainCountLock;
    MFMailbox *_mailbox;
    NSMutableArray *_allMessages;
    MFMailAccount *_account;
    NSMutableSet *_uniqueStrings;
    BOOL _isReadOnly;
    BOOL _compactOnClose;
    BOOL _haveOpenLockFile;
    BOOL _isWritingChangesToDisk;
    BOOL _isTryingToClose;
    id _cacheLock;
    NSCache *_headerDataCache;
    NSCache *_headerCache;
    NSCache *_bodyDataCache;
    NSCache *_bodyCache;
    int _storeState;
    NSTimer *_timer;
    MCActivityMonitor *_openMonitor;
    NSMutableDictionary *_fetchLockMap;
    BOOL _hasUnsavedChangesToMessageData;
    BOOL _forceInvalidation;
    NSOperationQueue *_deleteQueue;
}

+ (void)_autosaveMessageStore:(id)arg1;
+ (long long)copyMessages:(id)arg1 toMailbox:(id)arg2 shouldDelete:(BOOL)arg3;
+ (id)succesfulMessagesFromMessages:(id)arg1 unsuccessfulOnes:(id)arg2;
+ (BOOL)cheapStoreAtPathIsEmpty:(id)arg1;
+ (BOOL)storeAtPathIsWritable:(id)arg1;
+ (BOOL)createEmptyStoreForPath:(id)arg1;
+ (BOOL)createEmptyStoreIfNeededForPath:(id)arg1 notIndexable:(BOOL)arg2;
+ (void)removeStoreFromCache:(id)arg1;
+ (void)registerAvailableStore:(id)arg1 forMailbox:(id)arg2;
+ (id)currentlyAvailableStoresForAccount:(id)arg1;
+ (id)currentlyAvailableStoreForMailbox:(id)arg1;
+ (id)_copyRawAvailableStoreForMailbox:(id)arg1 wantsCreate:(BOOL)arg2 shouldCreate:(char *)arg3;
+ (id)_storeCreationMarker;
+ (id)descriptionOfOpenStores;
+ (unsigned long long)numberOfCurrentlyOpenStores;
+ (void)initialize;
@property(readonly, nonatomic) NSOperationQueue *deleteQueue; // @synthesize deleteQueue=_deleteQueue;
@property BOOL forceInvalidation; // @synthesize forceInvalidation=_forceInvalidation;
@property BOOL hasUnsavedChangesToMessageData; // @synthesize hasUnsavedChangesToMessageData=_hasUnsavedChangesToMessageData;
@property(retain) MCActivityMonitor *openMonitor; // @synthesize openMonitor=_openMonitor;
@property BOOL isReadOnly; // @synthesize isReadOnly=_isReadOnly;
- (id)dataForMimePart:(id)arg1;
- (void)setNumberOfAttachments:(unsigned int)arg1 isSigned:(BOOL)arg2 isEncrypted:(BOOL)arg3 forMessage:(id)arg4;
- (id)attachmentsDirectoryForMessage:(id)arg1;
- (BOOL)_updateFlagColor:(BOOL)arg1 forMessage:(id)arg2;
- (BOOL)_updateFlagForMessage:(id)arg1 key:(id)arg2 value:(BOOL)arg3;
- (void)messagesWereAdded:(id)arg1 conversationsMembers:(id)arg2 duringOpen:(BOOL)arg3 options:(id)arg4;
- (void)_setFlagsAndColorForMessages:(id)arg1;
- (void)_setBackgroundColorForMessages:(id)arg1 textColorForMessages:(id)arg2;
- (void)updateMessages:(id)arg1 updateColor:(BOOL)arg2 updateNumberOfAttachments:(BOOL)arg3;
- (void)updateMessageColorsSynchronouslyForMessages:(id)arg1 postingNotification:(BOOL)arg2;
- (id)_cachedHeaderDataForMessage:(id)arg1 valueIfNotPresent:(id)arg2;
- (id)_cachedBodyDataForMessage:(id)arg1 valueIfNotPresent:(id)arg2;
- (id)_cachedHeadersForMessage:(id)arg1 valueIfNotPresent:(id)arg2;
- (id)_cachedBodyForMessage:(id)arg1 valueIfNotPresent:(id)arg2;
- (id)_setOrGetValue:(id)arg1 forKey:(id)arg2 inCache:(id *)arg3;
- (void)_invalidateObjectCachesForKey:(id)arg1;
- (id)_setOrGetBody:(id)arg1 forMessage:(id)arg2 updateFlags:(BOOL)arg3;
- (void)_rebuildTableOfContentsSynchronously;
- (void)_flushAllMessageData;
- (void)flushAllCaches;
- (void)_removeLockFile;
- (BOOL)_acquireLockFile;
- (id)_lockFilePath;
- (void)_invalidateInBackground;
- (void)_invalidate;
- (int)storeState;
- (BOOL)setStoreState:(int)arg1 fromState:(int)arg2;
- (BOOL)_isReadyToBeInvalidated;
- (BOOL)_shouldCallCompactWhenClosing;
- (id)_fetchBodyForMessage:(id)arg1 updateFlags:(BOOL)arg2;
- (id)_fetchBodyForMessage:(id)arg1 fetchIfNotAvailable:(BOOL)arg2 updateFlags:(BOOL)arg3 allowPartial:(BOOL)arg4;
- (id)_fetchBodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id *)arg2 fetchIfNotAvailable:(BOOL)arg3 allowPartial:(BOOL)arg4;
- (id)_fetchBodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id *)arg2 fetchIfNotAvailable:(BOOL)arg3;
- (id)_fetchHeaderDataForMessage:(id)arg1 fetchIfNotAvailable:(BOOL)arg2 allowPartial:(BOOL)arg3;
- (id)_fetchHeaderDataForMessage:(id)arg1 fetchIfNotAvailable:(BOOL)arg2;
- (void)_setNeedsAutosave;
- (void)_cancelAutosave;
- (void)invalidateMessages:(id)arg1;
- (void)invalidateMessage:(id)arg1;
- (BOOL)isSortedAscending;
- (id)sortOrder;
- (void)suggestSortOrder:(id)arg1 ascending:(BOOL)arg2;
- (void)setSyncEngineLogging:(BOOL)arg1;
- (void)invalidateSyncEngine;
- (void)fetchSynchronouslyForKnownChanges;
- (void)fetchSynchronously;
- (id)status;
- (void)sendResponseType:(BOOL)arg1 forMeetingMessage:(id)arg2;
- (id)async_setJunkMailLevel:(long long)arg1 forMessages:(id)arg2 trainJunkMailDatabase:(BOOL)arg3 userRecorded:(BOOL)arg4;
- (id)async_setJunkMailLevel:(long long)arg1 forMessages:(id)arg2 trainJunkMailDatabase:(BOOL)arg3;
- (id)async_setJunkMailLevel:(long long)arg1 forMessages:(id)arg2;
- (void)updateMessageColorsSynchronouslyForMessages:(id)arg1;
- (void)updateNumberOfAttachmentsAndColorsForMessages:(id)arg1;
- (void)updateNumberOfAttachmentsForMessages:(id)arg1;
- (void)startSynchronization;
- (void)setColor:(id)arg1 highlightTextOnly:(BOOL)arg2 forMessages:(id)arg3;
- (id)async_setFlagWithKey:(id)arg1 state:(BOOL)arg2 forMessages:(id)arg3;
- (id)async_setLocalFlagsForMessages:(id)arg1;
- (id)async_setGmailLabelsFromDictionary:(id)arg1 forMessages:(id)arg2;
- (id)async_setFlagsFromDictionary:(id)arg1 forMessages:(id)arg2;
- (id)setPrimitiveFlagsFromDictionary:(id)arg1 forMessages:(id)arg2;
- (void)saveSnippetsForMessages:(id)arg1;
- (id)snippetsForMessages:(id)arg1;
- (BOOL)supportsSnippets;
- (id)colorForMessage:(id)arg1;
- (id)uniquedString:(id)arg1;
- (BOOL)hasCachedDataForMimePart:(id)arg1;
- (id)headersForMessage:(id)arg1 fetchIfNotAvailable:(BOOL)arg2;
- (id)headersForMessage:(id)arg1;
- (void)updateBodyFlagsForMessage:(id)arg1 body:(id)arg2;
- (id)bodyForMessage:(id)arg1 fetchIfNotAvailable:(BOOL)arg2 updateFlags:(BOOL)arg3 allowPartial:(BOOL)arg4;
- (id)bodyForMessage:(id)arg1 fetchIfNotAvailable:(BOOL)arg2 updateFlags:(BOOL)arg3;
- (id)bodyForMessage:(id)arg1 fetchIfNotAvailable:(BOOL)arg2;
- (id)fullBodyDataForMessage:(id)arg1;
- (id)fullBodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id *)arg2;
- (id)fullBodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id *)arg2 fetchIfNotAvailable:(BOOL)arg3;
- (id)bodyDataForMessage:(id)arg1;
- (id)bodyDataForMessage:(id)arg1 fetchIfNotAvailable:(BOOL)arg2;
- (id)bodyDataForMessage:(id)arg1 fetchIfNotAvailable:(BOOL)arg2 allowPartial:(BOOL)arg3;
- (id)headerDataForMessage:(id)arg1 allowPartial:(BOOL)arg2;
- (id)headerDataForMessage:(id)arg1;
- (id)headerDataForMessage:(id)arg1 fetchIfNotAvailable:(BOOL)arg2;
- (id)headerDataForMessage:(id)arg1 fetchIfNotAvailable:(BOOL)arg2 allowPartial:(BOOL)arg3;
- (unsigned long long)_numberOfMessagesToCache;
- (id)messageForMessageID:(id)arg1;
- (id)messagesForDocumentID:(id)arg1;
- (id)recentMessageWithValue:(id)arg1 forHeader:(id)arg2;
- (long long)appendMessages:(id)arg1 unsuccessfulOnes:(id)arg2;
- (long long)appendMessages:(id)arg1 unsuccessfulOnes:(id)arg2 newMessageIDs:(id)arg3;
- (long long)appendMessages:(id)arg1 unsuccessfulOnes:(id)arg2 newMessageIDs:(id)arg3 newMessages:(id)arg4;
- (long long)appendMessages:(id)arg1 unsuccessfulOnes:(id)arg2 newMessageIDs:(id)arg3 newMessages:(id)arg4 forMove:(BOOL)arg5;
- (long long)appendMessages:(id)arg1 unsuccessfulOnes:(id)arg2 newMessageIDs:(id)arg3 newMessages:(id)arg4 flagsToSet:(id)arg5;
- (long long)appendMessages:(id)arg1 unsuccessfulOnes:(id)arg2 newMessageIDs:(id)arg3 newMessages:(id)arg4 flagsToSet:(id)arg5 forMove:(BOOL)arg6;
- (long long)appendMessages:(id)arg1 unsuccessfulOnes:(id)arg2 newMessageIDs:(id)arg3 newMessages:(id)arg4 flagsToSet:(id)arg5 forMove:(BOOL)arg6 error:(id *)arg7;
- (long long)appendMessages:(id)arg1 unsuccessfulOnes:(id)arg2 newMessageIDs:(id)arg3 newMessages:(id)arg4 newDocumentIDsByOld:(id)arg5 flagsToSet:(id)arg6 forMove:(BOOL)arg7 error:(id *)arg8;
- (void)finishCopyOfMessages:(id)arg1 fromStore:(id)arg2 originalsWereDeleted:(BOOL)arg3;
- (long long)undoAppendOfMessageIDs:(id)arg1;
- (BOOL)allowsDeleteInPlace;
- (BOOL)allowsOverwrite;
- (BOOL)allowsAppend;
- (void)deleteLastMessageWithHeaders:(id)arg1 compactWhenDone:(BOOL)arg2;
- (void)undeleteMessages:(id)arg1;
- (id)undeleteMessages:(id)arg1 movedToStore:(id)arg2 newMessageIDs:(id)arg3;
- (void)deleteMessages:(id)arg1 moveToTrash:(BOOL)arg2;
- (id)async_deleteMessages:(id)arg1 moveToTrash:(BOOL)arg2;
- (void)deleteMessagesOlderThanNumberOfDays:(long long)arg1 compact:(BOOL)arg2;
- (void)doCompact;
- (BOOL)canCompact;
- (void)rebuildTableOfContentsAsynchronously;
- (BOOL)canRebuild;
- (id)routeMessages:(id)arg1 isUserAction:(BOOL)arg2;
- (id)finishRoutingMessages:(id)arg1 routed:(id)arg2;
- (id)routeMessages:(id)arg1;
- (id)_defaultRouterDestination;
- (void)addMessagesToAllMessages:(id)arg1;
- (id)copyOfAllMessagesWithOptions:(unsigned int)arg1;
- (id)mutableCopyOfAllMessages;
- (id)copyOfAllMessages;
- (unsigned long long)totalCount;
- (void)messagesWereUpdated:(id)arg1;
- (void)messagesWereCompacted:(id)arg1;
- (void)messagesWereAdded:(id)arg1;
- (void)structureDidChange;
- (void)messageFlagsDidChange:(id)arg1 flags:(id)arg2;
- (BOOL)isTrash;
- (id)description;
- (const char *)displayNameForLogging;
- (id)displayName;
- (BOOL)isOpened;
- (id)allMailboxRepresentations;
- (BOOL)isSmartMailbox;
- (id)mailbox;
- (id)account;
- (void)invalidateSavingChanges:(BOOL)arg1;
- (void)saveChanges;
- (void)writeUpdatedMessageDataToDisk;
- (void)cancelOpen;
- (void)didOpenWithMessages:(id)arg1;
- (void)willOpen;
- (void)cleanupSynchronously;
- (void)_cleanupSynchronouslyIfCancelOpenPosted;
- (void)cleanupAsynchronously;
- (void)updateMetadata;
- (void)updateMetadataAsynchronously;
- (void)openSynchronouslyUpdatingMetadata:(BOOL)arg1;
- (void)openSynchronously;
- (void)openAsynchronouslyWithOptions:(unsigned int)arg1;
- (void)openAsynchronously;
- (void)reset;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)_messageStoreCommonInit;
- (id)initWithMailbox:(id)arg1 readOnly:(BOOL)arg2;
- (id)init;
- (id)willDeallocPerformingInStoreCacheLock:(char *)arg1;
- (void)queueSaveChangesInvocation;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (id)objectSpecifierForMessage:(id)arg1;
- (id)objectSpecifier;

@end

