/*
 *     Generated by class-dump 3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.
 */

#import <Mail/MFRemoteStoreAccount.h>

#import "IMAPAccount.h"

@class IMAPConnectionPool, MCAuthScheme, MFIMAPOperationCache, MFLibraryIMAPStore, MFMailbox, NSArray, NSDictionary, NSLock, NSMutableArray, NSMutableDictionary, NSMutableSet, NSOperationQueue, NSString, NSURL;

@interface MFIMAPAccount : MFRemoteStoreAccount <IMAPAccount>
{
    double _lastUnreadCountsUpdateTime;
    double _lastUnreadCountsAndNewMessagesUpdateTime;
    double _lastMailboxListFetchTime;
    NSArray *_lastKnownCapabilities;
    NSMutableArray *_namespacePrefixes;
    NSString *_separatorChar;
    IMAPConnectionPool *_connectionPool;
    NSLock *_connectionPoolLock;
    MFIMAPOperationCache *_offlineCache;
    NSString *_serverPathPrefixWithFilesystemSeparator;
    NSString *_serverPathPrefixAsFilesystemPath;
    NSLock *_fsPrefixLock;
    NSLock *_mailboxListingLock;
    NSMutableSet *_mailboxURLsToSynchronize;
    NSMutableDictionary *_IMAPMailboxes;
    NSMutableDictionary *_IMAPQuotaRoots;
    NSOperationQueue *_imapQueue;
    NSOperationQueue *_cleanUpQueue;
    id _allMailLock;
    MFMailbox *_allMailMailbox;
    unsigned int _readBufferSize;
    BOOL _lastConnectionFailed;
    BOOL _shouldIncludePrefixInPath;
    BOOL _allowsInputForConnectionProblems;
    BOOL _isFetchingUnreadCountsForAllMailboxes;
    BOOL _isFetchingUnreadCountsAndCheckingNewMessagesForAllMailboxes;
    BOOL _recoveringFromConnectionLoss;
    MFMailbox *_serverDefinedArchiveMailbox;
    id _serverDefinedArchiveMailboxLock;
    MFMailbox *_serverDefinedDraftsMailbox;
    id _serverDefinedDraftsMailboxLock;
    MFMailbox *_serverDefinedJunkMailbox;
    id _serverDefinedJunkMailboxLock;
    MFMailbox *_serverDefinedSentMailbox;
    id _serverDefinedSentMailboxLock;
    MFMailbox *_serverDefinedTrashMailbox;
    id _serverDefinedTrashMailboxLock;
    MFLibraryIMAPStore *_idleStore;
}

+ (id)_mailboxNameForPathComponent:(id)arg1;
+ (id)_pathComponentForMailboxName:(id)arg1;
+ (void)_deleteQueuedMailboxes:(id)arg1;
+ (id)accountTypeString;
@property BOOL recoveringFromConnectionLoss; // @synthesize recoveringFromConnectionLoss=_recoveringFromConnectionLoss;
@property(retain) IMAPConnectionPool *connectionPool; // @synthesize connectionPool=_connectionPool;
@property(retain) MFLibraryIMAPStore *idleStore; // @synthesize idleStore=_idleStore;
- (void)messageDeliveryWillBegin:(id)arg1;
- (id)remoteTaskQueue;
- (BOOL)storesUnseenCount;
- (id)_infoForMatchingURL:(id)arg1;
- (id)_URLPersistenceScheme;
- (id)mailboxForRelativePath:(id)arg1 isFilesystemPath:(BOOL)arg2 create:(BOOL)arg3;
- (void)_clearOfflineCache;
@property(readonly) id <IMAPOfflineCache> offlineCache;
- (id)offlineCacheIfOffline;
- (void)deleteMessagesFromMailbox:(id)arg1 olderThanNumberOfDays:(unsigned long long)arg2;
- (void)_loadEntriesFromFileSystemPath:(id)arg1 parent:(id)arg2;
- (id)_mailboxPathPrefix:(BOOL)arg1;
- (void)syncFileSystemWithServerPathPrefix;
- (void)_setFileSystemServerPathPrefix;
- (id)_fileSystemServerPathPrefix:(BOOL)arg1;
- (void)setServerPathPrefix:(id)arg1 permanently:(BOOL)arg2;
- (void)_setServerPathPrefix:(id)arg1 permanently:(BOOL)arg2 shouldSync:(BOOL)arg3;
- (id)serverPathPrefix;
- (id)storedServerPathPrefix;
- (BOOL)canMailboxBeDeleted:(id)arg1;
- (id)_mailboxForName:(id)arg1;
- (id)nameForMailbox:(id)arg1;
- (id)_fullIMAPPathForPath:(id)arg1 relativeToMailbox:(id)arg2;
- (void)insertInMailboxes:(id)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)renameMailbox:(id)arg1 newDisplayName:(id)arg2 parent:(id)arg3;
- (void)_recursivelyModifySubscriptions:(BOOL)arg1 forMailbox:(id)arg2 children:(id)arg3 withGateway:(id)arg4;
- (void)_mailboxesWereRemovedFromTree:(id)arg1 withFileSystemPaths:(id)arg2;
- (void)_waitForMailboxListingLoadToComplete;
- (void)_loadMailboxListingIntoCache:(id)arg1 parent:(id)arg2 addedMailboxes:(id)arg3 removedMailboxes:(id)arg4 updatingSourceMailbox:(BOOL)arg5;
- (void)_loadMailboxListingIntoCache:(id)arg1 parent:(id)arg2 addedMailboxes:(id)arg3 removedMailboxes:(id)arg4;
- (void)refreshMailboxListingRootedAtMailbox:(id)arg1;
- (void)_synchronouslyLoadListingForParent:(id)arg1;
- (id)_copyMailboxWithParent:(id)arg1 name:(id)arg2 pathComponent:(id)arg3 attributes:(unsigned long long)arg4 existingMailbox:(id)arg5;
- (void)_synchronizeAccountWithServerHighPriority:(id)arg1;
- (void)_fetchUnreadCountsCheckForNewMessages:(BOOL)arg1;
- (void)_fetchUnreadCountsForMailbox:(id)arg1 recursively:(BOOL)arg2 gateway:(id)arg3;
- (void)_fetchUnreadCountsForMailbox:(id)arg1 recursively:(BOOL)arg2 gateway:(id)arg3 checkForNewMessages:(BOOL)arg4;
- (id)_specialMailboxWithType:(int)arg1 create:(BOOL)arg2 isLocal:(BOOL)arg3;
- (id)_specialMailboxRelativePathForType:(int)arg1;
- (BOOL)_deleteMailbox:(id)arg1 reflectToServer:(BOOL)arg2;
- (BOOL)deleteMailbox:(id)arg1 reflectToServer:(BOOL)arg2;
- (BOOL)_askToChangePathPrefixToCreateMailbox:(id)arg1 displayName:(id)arg2 withGateway:(id)arg3;
- (id)validNameForMailbox:(id)arg1 fromDisplayName:(id)arg2 error:(id *)arg3;
- (id)createMailboxWithParent:(id)arg1 displayName:(id)arg2 localizedDisplayName:(id)arg3;
- (BOOL)_createMailbox:(id)arg1 withGateway:(id)arg2;
- (id)_listingForMailbox:(id)arg1 listAllChildren:(BOOL)arg2 highPriority:(BOOL)arg3;
- (id)_recursivelyFilterMailboxList:(id)arg1 accordingToList:(id)arg2;
- (id)_namespacePrefixesForPrivate:(BOOL)arg1 public:(BOOL)arg2 shared:(BOOL)arg3;
- (id)_listingForMailbox:(id)arg1 listAllChildren:(BOOL)arg2 onlySubscribed:(BOOL)arg3 highPriority:(BOOL)arg4;
- (void)_synchronizeMailboxListDuringMailCheck;
- (void)_updateSpecialMailboxes;
- (BOOL)_synchronizeMailboxListHighPriority:(BOOL)arg1;
- (BOOL)hasCapability:(unsigned long long)arg1;
- (BOOL)supportsIDLE;
- (id)lastKnownCapabilities;
- (id)separatorChar;
- (void)_setSeparatorChar:(id)arg1;
- (void)fetchSynchronouslyIsAuto:(id)arg1;
- (void)_asynchronouslyFetchUnreadCountsCheckForNewMessages:(BOOL)arg1 isHighPriority:(BOOL)arg2;
- (void)setIsOffline:(BOOL)arg1;
- (void)_setIsOffline:(BOOL)arg1;
- (void)clearQuotaRoots;
- (id)quotaRootForName:(id)arg1 createIfNeeded:(BOOL)arg2;
- (void)_startObserving:(BOOL)arg1 IMAPMailbox:(id)arg2;
- (void)_removeIMAPMailboxWithName:(id)arg1;
- (void)_renameIMAPMailboxWithMailbox:(id)arg1 fromName:(id)arg2 toName:(id)arg3;
- (BOOL)resetSpecialMailboxes;
- (id)_serverDefinedMailboxWithAttribute:(unsigned long long)arg1;
@property(readonly) MFMailbox *serverDefinedTrashMailbox;
@property(readonly) MFMailbox *serverDefinedSentMailbox;
@property(readonly) MFMailbox *serverDefinedJunkMailbox;
@property(readonly) MFMailbox *serverDefinedDraftsMailbox;
@property(readonly) MFMailbox *serverDefinedArchiveMailbox;
- (id)gmailLabelWithName:(id)arg1;
- (id)_addIMAPMailboxForMailbox:(id)arg1 name:(id)arg2;
- (id)_IMAPMailboxForMailbox:(id)arg1 name:(id)arg2 createIfNeeded:(BOOL)arg3;
- (id)IMAPMailboxForMailboxName:(id)arg1 createIfNeeded:(BOOL)arg2;
- (id)IMAPMailboxForMailbox:(id)arg1 createIfNeeded:(BOOL)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)validateConnections;
- (void)_validateConnections;
- (void)releaseAllConnections;
- (void)_releaseAllConnectionsAndCallSuper:(BOOL)arg1 saveOfflineCache:(BOOL)arg2;
- (BOOL)_recoverFromConnectionlessStateHighPriority:(BOOL)arg1;
- (BOOL)shouldRetryConnectionWithoutCertificateCheckingAfterError:(id)arg1 host:(id)arg2 didPromptUser:(char *)arg3;
- (id)_getPotentialGatewayForMailbox:(id)arg1 options:(unsigned long long)arg2 createdNewConnection:(char *)arg3 needsSelect:(char *)arg4;
- (id)_gatewayForMailbox:(id)arg1 name:(id)arg2 options:(unsigned long long)arg3;
- (void)_invalidateMailboxWithName:(id)arg1 expunge:(BOOL)arg2 URLToCompact:(id)arg3;
- (void)invalidateMailboxWithName:(id)arg1 expunge:(BOOL)arg2 URLToCompact:(id)arg3;
- (void)recoverFromConnectionLoss;
- (id)gatewayForExistingConnectionToMailbox:(id)arg1;
- (id)gatewayForMailbox:(id)arg1 options:(unsigned long long)arg2;
- (void)handleOpenMailboxError:(id)arg1;
- (id)authSchemesForConnection:(id)arg1;
- (BOOL)canAuthenticateWithScheme:(id)arg1 connection:(id)arg2;
- (BOOL)connectAndAuthenticate:(id)arg1;
- (void)detectAllMailWithGateway:(id)arg1;
- (BOOL)isGmailAccount;
@property long long gmailCapabilitiesSupport;
- (void)setStoreTrashOnServer:(BOOL)arg1;
- (void)setStoreSentMessagesOnServer:(BOOL)arg1;
- (void)setStoreJunkOnServer:(BOOL)arg1;
- (void)setStoreDraftsOnServer:(BOOL)arg1;
@property BOOL ignoreServerDefinedTrashMailbox;
@property BOOL ignoreServerDefinedSentMailbox;
@property BOOL ignoreServerDefinedJunkMailbox;
@property BOOL ignoreServerDefinedDraftsMailbox;
@property BOOL ignoreServerDefinedArchiveMailbox;
@property BOOL hasServerDefinedTrashMailbox;
@property BOOL hasServerDefinedSentMailbox;
@property BOOL hasServerDefinedJunkMailbox;
@property BOOL hasServerDefinedDraftsMailbox;
@property BOOL hasServerDefinedArchiveMailbox;
@property BOOL hasServerDefinedAllMailMailbox;
@property(copy) NSDictionary *serverID;
- (void)_clearAllPathBasedCachesAndDelete:(BOOL)arg1;
- (void)setAllowsPartialDownloads:(BOOL)arg1;
- (BOOL)allowsPartialDownloads;
- (unsigned long long)minimumPartialDownloadSize;
- (id)_dataForTemporaryUid:(unsigned int)arg1;
- (void)_checkForNewMessagesInStore:(id)arg1;
- (void)didSynchronizeMailboxCachesAndFoundChanges:(BOOL)arg1;
- (void)resetNeedToSynchronizeMailboxCaches;
- (BOOL)needToSynchronizeMailboxCaches;
- (void)synchronizeAllMailboxes;
@property unsigned int readBufferSize;
- (void)handleAlertResponse:(id)arg1;
- (BOOL)handleResponseCodeFromResponse:(id)arg1;
- (id)providerIdentifier;
- (id)iaServiceType;
- (void)_updateIdleMailbox;
- (id)allMailMailbox;
- (id)primaryMailbox;
- (BOOL)_setChildren:(id)arg1 forMailbox:(id)arg2;
@property BOOL useIDLEIfAvailable;
- (void)setCompactWhenClosingMailboxes:(BOOL)arg1;
- (BOOL)compactWhenClosingMailboxes;
- (id)authenticatedConnection;
- (id)newConnectedConnectionDiscoveringBestSettings:(BOOL)arg1 withConnectTimeout:(double)arg2 readWriteTimeout:(double)arg3;
- (id)_newConnectionWithPendingGateway:(BOOL)arg1;
@property(readonly) BOOL requiresAuthentication;
- (void *)keychainProtocol;
@property(readonly) NSString *saslProfileName;
- (long long)defaultSecurePortNumber;
- (long long)defaultPortNumber;
@property(readonly) NSArray *standardSSLPorts;
@property(readonly) NSArray *standardPorts;
- (id)mailboxPathExtension;
- (Class)storeClassForMailbox:(id)arg1;
- (void)sendAccountNeedsCheckingNotification;
- (void)doRoutineCleanup;
- (void)saveCache;
- (void)_writeCustomInfoToMailboxCache:(id)arg1;
- (void)_readCustomInfoFromMailboxCache:(id)arg1;
- (void)_cleanUpExistingMessagesIfNecessary;
- (id)_colorByMessageFromColorByMessageDigest:(id)arg1;
- (void)_migrateColorsForGmail;
@property BOOL needsGmailLabelsCleanup;
@property BOOL shouldUseGmailLabelStores;
- (void)completeDeferredInitialization;
- (void)dealloc;
- (id)initWithAccountInfo:(id)arg1;
- (void)setMessageCaching:(unsigned int)arg1;
- (unsigned int)messageCaching;

// Remaining properties
@property(readonly) NSString *accountTypeString;
@property(readonly) NSString *appleAuthenticationToken;
@property(readonly) NSString *applePersonID;
@property BOOL configureDynamically;
@property(copy) NSString *displayName;
@property(copy) NSString *externalHostname;
@property(readonly) NSString *googleClientToken;
@property(copy) NSString *hostname;
@property(readonly, nonatomic) NSString *internetAccountsUID;
@property(copy) NSString *password;
@property long long portNumber;
@property(retain) MCAuthScheme *preferredAuthScheme;
@property long long securityLayerType;
@property(readonly) NSURL *subscriptionURL;
@property(readonly) NSString *subscriptionURLLabel;
@property(readonly) NSString *uniqueId;
@property(copy) NSString *username;
@property BOOL usesSSL;

@end

