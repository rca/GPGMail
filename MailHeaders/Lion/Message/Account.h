/*
 *     Generated by class-dump 3.3.3 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2010 by Steve Nygard.
 */



#import "SyncableDataOwner-Protocol.h"

@class AuthScheme, NSDictionary, NSImage, NSMutableDictionary, NSString, NSURL;

@interface Account : NSObject <SyncableDataOwner>
{
    struct OpaqueSecIdentityRef *_tlsIdentity;
    NSString *_brandName;
    id _brandIcon;
    NSURL *_supportURL;
    NSString *_supportURLLabel;
    unsigned int _isOffline:1;
    unsigned int _willingToGoOnline:1;
    unsigned int _autosynchronizingEnabled:1;
    unsigned int _promptedToTrustSSLCertificates:1;
    unsigned int _isActive:2;
    NSMutableDictionary *_info;
}

+ (void)initialize;
+ (Class)accountClassForTypeString:(id)arg1;
+ (id)typeStringForAccountClass:(Class)arg1;
+ (BOOL)haveAccountsBeenConfigured;
+ (id)v2AccountsPlistName;
+ (id)readAccountsUsingDefaultsKey:(id)arg1 forceReadFromMailPreferences:(BOOL)arg2;
+ (id)readAccountsUsingDefaultsKey:(id)arg1;
+ (BOOL)_syncableChangesForNewAccountDefaults:(id)arg1 oldDefaults:(id)arg2;
+ (void)saveAccounts:(id)arg1 usingDefaultsKey:(id)arg2;
+ (void)saveAccounts:(id)arg1 usingDefaultsKey:(id)arg2 forceWriteToMailPreferences:(BOOL)arg3;
+ (BOOL)_shouldAnnounceChangesFromAccountInfo:(id)arg1 toAccountInfo:(id)arg2;
+ (void)saveAccountInfoToDefaults;
+ (id)accountsVersion;
+ (id)newAccountWithDictionary:(id)arg1;
+ (id)accountTypeString;
+ (id)genericAccountLargeImage;
+ (BOOL)allObjectsInArrayAreOffline:(id)arg1;
+ (id)keyPathsForValuesAffectingOfflineDisplayName;
+ (BOOL)defaultsToSSL;
+ (id)keyPathsForValuesAffectingPreferredAuthScheme;
@property(readonly) NSString *iaServiceType;
- (id)initWithAccountInfo:(id)arg1;
- (id)init;
- (void)dealloc;
@property(copy) NSDictionary *accountInfo;
- (void)_setAccountInfo:(id)arg1;
- (id)info;
- (void)setInfo:(id)arg1;
- (void)_queueAccountInfoDidChange;
@property(readonly) NSMutableDictionary *defaultsDictionary;
- (void)updateFromSyncedDictionary:(id)arg1;
@property(readonly) BOOL isSyncable;
- (void)setAutosynchronizingEnabled:(BOOL)arg1;
@property BOOL isActive;
@property BOOL isInactivatedInsteadOfBeingDeleted;
@property(readonly) BOOL canGoOffline;
@property BOOL isOffline;
@property BOOL isWillingToGoOnline;
@property(retain) NSString *storedDisplayName;
@property(retain) NSString *displayName;
@property(readonly) NSString *offlineDisplayName;
@property(retain) NSString *username;
@property(retain) NSString *hostname;
- (id)_hostnameWithAccountInfoKey:(id)arg1;
- (void)_setHostname:(id)arg1 accountInfoKey:(id)arg2;
@property(copy) NSString *password;
- (id)permanentPassword;
- (void)setPermanentPassword:(id)arg1;
- (id)sessionPassword;
- (void)setSessionPassword:(id)arg1;
- (id)promptUserForPasswordWithMessage:(id)arg1;
- (id)promptUserIfNeededForPasswordWithMessage:(id)arg1;
@property(readonly) NSString *applePersonID;
@property(readonly) NSString *appleAuthenticationToken;
- (struct OpaqueSecIdentityRef *)tlsIdentity;
- (void)setTlsIdentity:(struct OpaqueSecIdentityRef *)arg1;
@property unsigned int portNumber;
- (unsigned int)_portNumberWithAccountInfoKey:(id)arg1 sslAccountInfoKey:(id)arg2;
- (void)_setPortNumber:(unsigned int)arg1 accountInfoKey:(id)arg2 sslAccountInfoKey:(id)arg3;
@property(readonly) unsigned int defaultPortNumber;
@property(readonly) unsigned int defaultSecurePortNumber;
@property(readonly) unsigned int secondaryDefaultPortNumber;
@property(readonly) unsigned int tertiaryDefaultPortNumber;
@property(readonly) NSString *serviceName;
@property(readonly) NSString *secureServiceName;
- (void)releaseAllConnections;
- (void)validateConnections;
@property BOOL usesSSL;
- (BOOL)_usesSSLWithAccountInfoKey:(id)arg1;
- (void)_setUsesSSL:(BOOL)arg1 accountInfoKey:(id)arg2;
@property long long securityLayerType;
@property(retain) NSString *domain;
- (void)accountInfoDidChange;
@property(retain) AuthScheme *preferredAuthScheme;
@property(readonly) NSString *saslProfileName;
@property(readonly) Class connectionClass;
@property(readonly) BOOL requiresAuthentication;
- (id)newConnectedConnection;
- (id)authenticatedConnection;
- (BOOL)_shouldTryDirectSSLConnectionOnPort:(unsigned int)arg1;
- (BOOL)_shouldRetryConnectionWithoutCertificateCheckingAfterError:(id)arg1;
- (BOOL)_connectAndAuthenticate:(id)arg1;
@property(retain) NSString *ISPAccountID;
@property(readonly) NSString *uniqueId;
- (id)nameForMailboxUid:(id)arg1;
- (id)_ispDomain;
@property(readonly) NSURL *supportURL;
@property(readonly) NSString *supportURLLabel;
@property(readonly) NSURL *subscriptionURL;
@property(readonly) NSString *subscriptionURLLabel;
@property(readonly) NSString *accountTypeString;
- (id)brandName;
- (id)iaSettings;
@property(readonly) NSImage *brandIcon;
@property(nonatomic) BOOL promptToTrustSSLCertificates;
- (BOOL)dataWillBeSyncedVersion:(id *)arg1 data:(id *)arg2 type:(id)arg3;
- (BOOL)dataWasSyncedVersion:(id)arg1 newData:(id)arg2 acceptedChanges:(id)arg3;
- (void)updateAccountsFromPlist:(id)arg1 acceptedChanges:(id)arg2;
@property(readonly) BOOL isValid;
- (void)setAccountInfoObject:(id)arg1 forKey:(id)arg2;
- (void)removeAccountInfoObjectForKey:(id)arg1;
- (int)accountType;
- (void)setAccountPassword:(id)arg1;
- (id)accountPassword;
- (void)setServerName:(id)arg1;
- (id)serverName;
- (void)setLoginName:(id)arg1;
- (id)loginName;
- (void)setAccountName:(id)arg1;
- (id)accountName;
- (unsigned int)customAuthentication;
- (void)setCustomAuthentication:(unsigned int)arg1;

@end

