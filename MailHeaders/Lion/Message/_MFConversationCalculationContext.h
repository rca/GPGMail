/*
 *     Generated by class-dump 3.3.3 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2010 by Steve Nygard.
 */



@class LibraryMessage, NSData, NSHashTable, NSMutableDictionary, NSMutableSet, PreparedStatement, SqliteHandle;

@interface _MFConversationCalculationContext : NSObject
{
    long long _rowID;
    LibraryMessage *_message;
    long long _subjectID;
    unsigned long long _subjectLength;
    BOOL _hasSubjectPrefix;
    BOOL _hasReferences;
    NSData *_messageIDHeader;
    long long _conversationID;
    BOOL _messageType;
    long long _mailbox;
    long long _senderID;
    int _dateReceived;
    NSHashTable *_participants;
    SqliteHandle *_handle;
    struct sqlite3 *_db;
    BOOL _didTearDown;
    BOOL _conversationsWereReset;
    NSMutableSet *_addedConversations;
    NSMutableSet *_removedConversations;
    NSMutableSet *_updatedConversations;
    NSMutableDictionary *_oldConversationIDByMessage;
    NSMutableDictionary *_newConversationIDByMessage;
    PreparedStatement *_conversationIDOfRSSArticleStatement;
    PreparedStatement *_messageHasReferencesStatement;
    PreparedStatement *_messageHasMessageIDStatement;
    PreparedStatement *_conversationIDOfCloneStatement;
    PreparedStatement *_conversationIDOfAutomatedAncestorWithReferencesStatement;
    PreparedStatement *_conversationIDOfAutomatedPeerWithReferencesStatement;
    PreparedStatement *_conversationIDOfAutomatedMessageWithoutReferencesStatement;
    PreparedStatement *_conversationIDOfClosestAncestorStatement;
    PreparedStatement *_peersOfMessageStatement;
    PreparedStatement *_addMessageToConversationStatement;
    PreparedStatement *_messagesInConversationStatement;
    PreparedStatement *_descendantsToSplitFromConversationStatement;
    PreparedStatement *_descendantsOfMessageStatement;
    PreparedStatement *_descendantBelongsToSameConversationAsAncestorStatement;
    PreparedStatement *_peersToSplitFromConversationStatement;
    PreparedStatement *_fuzzyMessagesWithSameSubjectStatement;
    PreparedStatement *_candidateMessagesForFuzzyMatchingStatement;
    PreparedStatement *_fuzzyMessagesToSplitFromConversationStatement;
    PreparedStatement *_recipientsForRowIDStatement;
    PreparedStatement *_dateReceivedForRowIDStatement;
    PreparedStatement *_senderForRowIDStatement;
    PreparedStatement *_conversationIDForRowIDStatement;
    PreparedStatement *_setFuzzyAncestorForRowIDStatement;
    PreparedStatement *_subjectForRowIDStatement;
    PreparedStatement *_automatedConversationTypeForRowIDStatement;
    PreparedStatement *_clonesForRowIDStatement;
    double _conversationIDOfRSSArticleTime;
    double _messageHasReferencesTime;
    double _messageHasMessageIDTime;
    double _conversationIDOfCloneTime;
    double _conversationIDOfClosestAncestorTime;
    double _descendantsOfMessagesTime;
    double _peersOfMessagesTime;
    double _fuzzyDescendantsToSplitTime;
    double _conversationIDOfFuzzyAncestorTime;
    double _descendantsOfMessageToSplitTime;
    double _createNewConversationFromMessageTime;
    double _addMessageToConversationTime;
    double _mergeConversationsTime;
    double _calculateConversationForMessageTotalTime;
    double _conversationIDOfAutomatedMessageWithReferencesTime;
    double _conversationIDOfAutomatedMessageWithoutReferencesTime;
    unsigned long long _rssCount;
    unsigned long long _cloneCount;
    unsigned long long _closestAncestorCount;
    unsigned long long _descendantsFoundCount;
    unsigned long long _peersFoundCount;
    unsigned long long _fuzzyDescendantsToSplitCount;
    unsigned long long _fuzzyAncestorCount;
    unsigned long long _descendantsToSplitCount;
    unsigned long long _newConversationCount;
    unsigned long long _addMessageToConversationCount;
    unsigned long long _conversationsSplitCount;
    unsigned long long _conversationsMergeCount;
    unsigned long long _messagesMergedCount;
    unsigned long long _fuzzyMatchesCacheHits;
    unsigned long long _fuzzyMatchesCacheMisses;
    unsigned long long _automatedMessagesWithReferencesCount;
    unsigned long long _automatedMessagesWithoutReferencesCount;
}

- (id)initWithHandle:(id)arg1;
- (void)resetForNewRow;
@property(nonatomic) long long nextConversationID;
- (void)tearDown;
- (void)dealloc;
- (void)conversationWasAdded:(long long)arg1;
- (void)conversationWasRemoved:(long long)arg1;
- (void)conversationWasUpdated:(long long)arg1;
- (long long)conversationIDOfRSSArticle;
- (BOOL)messageHasReferences;
- (BOOL)messageHasMessageID;
- (long long)conversationIDOfCloneWithRowID:(long long *)arg1;
- (long long)conversationIDOfClosestAncestorWithRowID:(long long *)arg1;
- (long long)conversationIDOfFuzzyAncestorWithRowID:(long long *)arg1;
- (id)peersOfMessageExcludingAncestorConversationID:(long long)arg1 descendantConversationID:(long long)arg2;
- (long long)conversationIDOfAutomatedMessageWithoutReferences;
- (long long)conversationIDOfAutomatedMessageWithReferences;
- (long long)conversationIDUsingFuzzyHeuristicOfRowID:(long long)arg1 withSubject:(long long)arg2 subjectLength:(unsigned long long)arg3 sender:(long long)arg4 hasPrefix:(BOOL)arg5 participantsByRowID:(id)arg6 conversationIDByRowID:(id)arg7 dateReceivedByRowID:(id)arg8 resultRowID:(long long *)arg9 abortOnMatchBetterThanRowID:(long long)arg10;
- (id)fuzzyDescendantsToSplitExcludingConversationIDs:(id)arg1;
- (id)descendantsOfMessageExcludingConversationID:(long long)arg1;
- (long long)conversationIDOfClosestDescendantExcludingConversationID:(long long)arg1;
- (BOOL)descendant:(long long)arg1 belongsToSameConversationAsAncestor:(long long)arg2;
- (id)descendantsOfMessageToSplit;
- (id)recursiveDescendantsInConversations:(id)arg1;
- (id)conversationsWithFuzzyDescendantsExcludingConversations:(id)arg1;
- (unsigned long long)messagesWithSubject:(long long)arg1 participantsByRowID:(id)arg2 conversationIDByRowID:(id)arg3 dateReceivedByRowID:(id)arg4;
- (id)messagesInConversations:(id)arg1 count:(unsigned long long *)arg2;
- (long long)rowIDOfBestFuzzyAncestorForMessage:(long long)arg1 subjectID:(long long)arg2 subjectLength:(unsigned long long)arg3 dateReceived:(int)arg4 senderID:(long long)arg5 hasPrefix:(BOOL)arg6 participantsByRowID:(id)arg7 conversationIDByRowID:(id)arg8 dateReceivedByRowID:(id)arg9 currentFuzzyAncestor:(long long)arg10 abortOnMatchBetterThanRowID:(long long)arg11 conversationIDOfBestFuzzyAncestor:(long long *)arg12;
- (void)setFuzzyAncestor:(long long)arg1 forRowID:(long long)arg2;
- (int)dateReceivedForRowID:(long long)arg1;
- (long long)senderForRowID:(long long)arg1;
- (unsigned long long)subjectLengthForRowID:(long long)arg1;
- (long long)conversationIDForRowID:(long long)arg1;
- (id)recipientsForRowID:(long long)arg1;
- (id)participantsForRowID:(long long)arg1;
@property(retain, nonatomic) NSHashTable *participants; // @synthesize participants=_participants;
- (id)clonesForRowID:(long long)arg1;
- (unsigned long long)automatedConversationTypeForRowID:(long long)arg1;
@property(nonatomic) unsigned long long automatedMessagesWithoutReferencesCount; // @synthesize automatedMessagesWithoutReferencesCount=_automatedMessagesWithoutReferencesCount;
@property(nonatomic) unsigned long long automatedMessagesWithReferencesCount; // @synthesize automatedMessagesWithReferencesCount=_automatedMessagesWithReferencesCount;
@property(nonatomic) unsigned long long fuzzyMatchesCacheMisses; // @synthesize fuzzyMatchesCacheMisses=_fuzzyMatchesCacheMisses;
@property(nonatomic) unsigned long long fuzzyMatchesCacheHits; // @synthesize fuzzyMatchesCacheHits=_fuzzyMatchesCacheHits;
@property(nonatomic) unsigned long long messagesMergedCount; // @synthesize messagesMergedCount=_messagesMergedCount;
@property(nonatomic) unsigned long long conversationsMergeCount; // @synthesize conversationsMergeCount=_conversationsMergeCount;
@property(nonatomic) unsigned long long conversationsSplitCount; // @synthesize conversationsSplitCount=_conversationsSplitCount;
@property(nonatomic) unsigned long long addMessageToConversationCount; // @synthesize addMessageToConversationCount=_addMessageToConversationCount;
@property(nonatomic) unsigned long long newConversationCount; // @synthesize newConversationCount=_newConversationCount;
@property(nonatomic) unsigned long long descendantsToSplitCount; // @synthesize descendantsToSplitCount=_descendantsToSplitCount;
@property(nonatomic) unsigned long long fuzzyAncestorCount; // @synthesize fuzzyAncestorCount=_fuzzyAncestorCount;
@property(nonatomic) unsigned long long fuzzyDescendantsToSplitCount; // @synthesize fuzzyDescendantsToSplitCount=_fuzzyDescendantsToSplitCount;
@property(nonatomic) unsigned long long peersFoundCount; // @synthesize peersFoundCount=_peersFoundCount;
@property(nonatomic) unsigned long long descendantsFoundCount; // @synthesize descendantsFoundCount=_descendantsFoundCount;
@property(nonatomic) unsigned long long closestAncestorCount; // @synthesize closestAncestorCount=_closestAncestorCount;
@property(nonatomic) unsigned long long cloneCount; // @synthesize cloneCount=_cloneCount;
@property(nonatomic) unsigned long long rssCount; // @synthesize rssCount=_rssCount;
@property(nonatomic) double conversationIDOfAutomatedMessageWithoutReferencesTime; // @synthesize conversationIDOfAutomatedMessageWithoutReferencesTime=_conversationIDOfAutomatedMessageWithoutReferencesTime;
@property(nonatomic) double conversationIDOfAutomatedMessageWithReferencesTime; // @synthesize conversationIDOfAutomatedMessageWithReferencesTime=_conversationIDOfAutomatedMessageWithReferencesTime;
@property(nonatomic) double calculateConversationForMessageTotalTime; // @synthesize calculateConversationForMessageTotalTime=_calculateConversationForMessageTotalTime;
@property(nonatomic) double mergeConversationsTime; // @synthesize mergeConversationsTime=_mergeConversationsTime;
@property(nonatomic) double addMessageToConversationTime; // @synthesize addMessageToConversationTime=_addMessageToConversationTime;
@property(nonatomic) double createNewConversationFromMessageTime; // @synthesize createNewConversationFromMessageTime=_createNewConversationFromMessageTime;
@property(nonatomic) double descendantsOfMessageToSplitTime; // @synthesize descendantsOfMessageToSplitTime=_descendantsOfMessageToSplitTime;
@property(nonatomic) double conversationIDOfFuzzyAncestorTime; // @synthesize conversationIDOfFuzzyAncestorTime=_conversationIDOfFuzzyAncestorTime;
@property(nonatomic) double fuzzyDescendantsToSplitTime; // @synthesize fuzzyDescendantsToSplitTime=_fuzzyDescendantsToSplitTime;
@property(nonatomic) double peersOfMessagesTime; // @synthesize peersOfMessagesTime=_peersOfMessagesTime;
@property(nonatomic) double descendantsOfMessagesTime; // @synthesize descendantsOfMessagesTime=_descendantsOfMessagesTime;
@property(nonatomic) double conversationIDOfClosestAncestorTime; // @synthesize conversationIDOfClosestAncestorTime=_conversationIDOfClosestAncestorTime;
@property(nonatomic) double conversationIDOfCloneTime; // @synthesize conversationIDOfCloneTime=_conversationIDOfCloneTime;
@property(nonatomic) double messageHasMessageIDTime; // @synthesize messageHasMessageIDTime=_messageHasMessageIDTime;
@property(nonatomic) double messageHasReferencesTime; // @synthesize messageHasReferencesTime=_messageHasReferencesTime;
@property(nonatomic) double conversationIDOfRSSArticleTime; // @synthesize conversationIDOfRSSArticleTime=_conversationIDOfRSSArticleTime;
@property(retain, nonatomic) PreparedStatement *clonesForRowIDStatement; // @synthesize clonesForRowIDStatement=_clonesForRowIDStatement;
@property(retain, nonatomic) PreparedStatement *automatedConversationTypeForRowIDStatement; // @synthesize automatedConversationTypeForRowIDStatement=_automatedConversationTypeForRowIDStatement;
@property(retain, nonatomic) PreparedStatement *subjectForRowIDStatement; // @synthesize subjectForRowIDStatement=_subjectForRowIDStatement;
@property(retain, nonatomic) PreparedStatement *setFuzzyAncestorForRowIDStatement; // @synthesize setFuzzyAncestorForRowIDStatement=_setFuzzyAncestorForRowIDStatement;
@property(retain, nonatomic) PreparedStatement *conversationIDForRowIDStatement; // @synthesize conversationIDForRowIDStatement=_conversationIDForRowIDStatement;
@property(retain, nonatomic) PreparedStatement *senderForRowIDStatement; // @synthesize senderForRowIDStatement=_senderForRowIDStatement;
@property(retain, nonatomic) PreparedStatement *dateReceivedForRowIDStatement; // @synthesize dateReceivedForRowIDStatement=_dateReceivedForRowIDStatement;
@property(retain, nonatomic) PreparedStatement *recipientsForRowIDStatement; // @synthesize recipientsForRowIDStatement=_recipientsForRowIDStatement;
@property(retain, nonatomic) PreparedStatement *candidateMessagesForFuzzyMatchingStatement; // @synthesize candidateMessagesForFuzzyMatchingStatement=_candidateMessagesForFuzzyMatchingStatement;
@property(retain, nonatomic) PreparedStatement *fuzzyMessagesWithSameSubjectStatement; // @synthesize fuzzyMessagesWithSameSubjectStatement=_fuzzyMessagesWithSameSubjectStatement;
@property(retain, nonatomic) PreparedStatement *fuzzyMessagesToSplitFromConversationStatement; // @synthesize fuzzyMessagesToSplitFromConversationStatement=_fuzzyMessagesToSplitFromConversationStatement;
@property(retain, nonatomic) PreparedStatement *peersToSplitFromConversationStatement; // @synthesize peersToSplitFromConversationStatement=_peersToSplitFromConversationStatement;
@property(retain, nonatomic) PreparedStatement *descendantBelongsToSameConversationAsAncestorStatement; // @synthesize descendantBelongsToSameConversationAsAncestorStatement=_descendantBelongsToSameConversationAsAncestorStatement;
@property(retain, nonatomic) PreparedStatement *descendantsOfMessageStatement; // @synthesize descendantsOfMessageStatement=_descendantsOfMessageStatement;
@property(retain, nonatomic) PreparedStatement *descendantsToSplitFromConversationStatement; // @synthesize descendantsToSplitFromConversationStatement=_descendantsToSplitFromConversationStatement;
@property(retain, nonatomic) PreparedStatement *messagesInConversationStatement; // @synthesize messagesInConversationStatement=_messagesInConversationStatement;
@property(retain, nonatomic) PreparedStatement *addMessageToConversationStatement; // @synthesize addMessageToConversationStatement=_addMessageToConversationStatement;
@property(retain, nonatomic) PreparedStatement *peersOfMessageStatement; // @synthesize peersOfMessageStatement=_peersOfMessageStatement;
@property(retain, nonatomic) PreparedStatement *conversationIDOfClosestAncestorStatement; // @synthesize conversationIDOfClosestAncestorStatement=_conversationIDOfClosestAncestorStatement;
@property(retain, nonatomic) PreparedStatement *conversationIDOfAutomatedMessageWithoutReferencesStatement; // @synthesize conversationIDOfAutomatedMessageWithoutReferencesStatement=_conversationIDOfAutomatedMessageWithoutReferencesStatement;
@property(retain, nonatomic) PreparedStatement *conversationIDOfAutomatedPeerWithReferencesStatement; // @synthesize conversationIDOfAutomatedPeerWithReferencesStatement=_conversationIDOfAutomatedPeerWithReferencesStatement;
@property(retain, nonatomic) PreparedStatement *conversationIDOfAutomatedAncestorWithReferencesStatement; // @synthesize conversationIDOfAutomatedAncestorWithReferencesStatement=_conversationIDOfAutomatedAncestorWithReferencesStatement;
@property(retain, nonatomic) PreparedStatement *conversationIDOfCloneStatement; // @synthesize conversationIDOfCloneStatement=_conversationIDOfCloneStatement;
@property(retain, nonatomic) PreparedStatement *messageHasMessageIDStatement; // @synthesize messageHasMessageIDStatement=_messageHasMessageIDStatement;
@property(retain, nonatomic) PreparedStatement *messageHasReferencesStatement; // @synthesize messageHasReferencesStatement=_messageHasReferencesStatement;
@property(retain, nonatomic) PreparedStatement *conversationIDOfRSSArticleStatement; // @synthesize conversationIDOfRSSArticleStatement=_conversationIDOfRSSArticleStatement;
@property(retain, nonatomic) NSMutableDictionary *newConversationIDByMessage; // @synthesize newConversationIDByMessage=_newConversationIDByMessage;
@property(retain, nonatomic) NSMutableDictionary *oldConversationIDByMessage; // @synthesize oldConversationIDByMessage=_oldConversationIDByMessage;
@property(retain, nonatomic) NSMutableSet *updatedConversations; // @synthesize updatedConversations=_updatedConversations;
@property(retain, nonatomic) NSMutableSet *removedConversations; // @synthesize removedConversations=_removedConversations;
@property(retain, nonatomic) NSMutableSet *addedConversations; // @synthesize addedConversations=_addedConversations;
@property(nonatomic) BOOL conversationsWereReset; // @synthesize conversationsWereReset=_conversationsWereReset;
@property(readonly, nonatomic) BOOL didTearDown; // @synthesize didTearDown=_didTearDown;
@property(readonly, nonatomic) struct sqlite3 *db; // @synthesize db=_db;
@property(readonly, retain, nonatomic) SqliteHandle *handle; // @synthesize handle=_handle;
@property(nonatomic) int dateReceived; // @synthesize dateReceived=_dateReceived;
@property(nonatomic) long long senderID; // @synthesize senderID=_senderID;
@property(nonatomic) long long mailbox; // @synthesize mailbox=_mailbox;
@property(nonatomic) BOOL messageType; // @synthesize messageType=_messageType;
@property(nonatomic) long long conversationID; // @synthesize conversationID=_conversationID;
@property(retain, nonatomic) NSData *messageIDHeader; // @synthesize messageIDHeader=_messageIDHeader;
@property(nonatomic) BOOL hasReferences; // @synthesize hasReferences=_hasReferences;
@property(nonatomic) BOOL hasSubjectPrefix; // @synthesize hasSubjectPrefix=_hasSubjectPrefix;
@property(nonatomic) unsigned long long subjectLength; // @synthesize subjectLength=_subjectLength;
@property(nonatomic) long long subjectID; // @synthesize subjectID=_subjectID;
@property(retain, nonatomic) LibraryMessage *message; // @synthesize message=_message;
@property(nonatomic) long long rowID; // @synthesize rowID=_rowID;

@end

