/*
 *     Generated by class-dump 3.3.3 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2010 by Steve Nygard.
 */

#import "NSOperationQueue.h"

@class ActivityMonitor, IMAPClientDoneOperation, IMAPClientSelectOperation, IMAPClientSuspendOperation, IMAPGateway, NSRecursiveLock, NSString;

@interface IMAPClientOperationQueue : NSOperationQueue
{
    IMAPClientDoneOperation *_doneOperation;
    IMAPClientSelectOperation *_selectOperation;
    IMAPClientSuspendOperation *_suspendOperation;
    NSRecursiveLock *_addOperationLock;
    IMAPGateway *_gateway;
    NSString *_activityName;
    ActivityMonitor *_activityMonitor;
    NSRecursiveLock *_activityMonitorLock;
    struct dispatch_source_s *_activityFinishTimer;
    BOOL _activityMonitorIsActive;
}

- (void)dealloc;
- (id)init;
- (void)activityDidStart:(id)arg1;
- (void)_clearActivityFinishTimer;
- (void)_postDelayedActivityFinished;
- (void)activityDidFinish:(id)arg1;
- (id)selectedMailboxName;
@property(retain) IMAPClientDoneOperation *doneOperation;
@property(retain) IMAPClientSelectOperation *selectOperation;
- (BOOL)addClientOperation:(id)arg1 outUpdatedOperation:(id *)arg2;
- (BOOL)waitUntilOperationIsFinished:(id)arg1;
- (id)newSelectOperationForResumingIfNeeded;
- (void)changeSelectDependenciesTo:(id)arg1;
- (void)updateDoneReadiness;
- (BOOL)refreshDoneWithGateway:(id)arg1 operation:(id)arg2;
- (void)_setupDependeciesOnDone;
- (void)clearDoneWithOperation:(id)arg1;
- (BOOL)isIdle;
- (BOOL)shouldAllowIdleToExecute:(id)arg1;
- (BOOL)setupDependenciesOnSuspendCreatingIfNeeded;
- (void)suspendIfNeededAndClear:(BOOL)arg1;
@property(retain) IMAPClientSuspendOperation *suspendOperation;
- (void)finishIdling;
- (void)refreshIdle;
- (id)description;
@property(readonly, retain) ActivityMonitor *activityMonitor; // @synthesize activityMonitor=_activityMonitor;
@property(retain) NSString *activityName; // @synthesize activityName=_activityName;
@property(retain) IMAPGateway *gateway; // @synthesize gateway=_gateway;
@property(retain, nonatomic) NSRecursiveLock *addOperationLock; // @synthesize addOperationLock=_addOperationLock;

@end

