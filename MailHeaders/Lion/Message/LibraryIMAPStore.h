/*
 *     Generated by class-dump 3.3.3 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2010 by Steve Nygard.
 */

#import <Message/RemoteStore.h>

#import "IMAPMailboxDelegate-Protocol.h"

@class IMAPCommandPipeline, IMAPDownloadCache, IMAPMailbox, IMAPMailboxSyncEngine, InvocationQueue, NSLock, NSMutableArray, NSMutableDictionary, NSOperationQueue, NSString;

@interface LibraryIMAPStore : RemoteStore <IMAPMailboxDelegate>
{
    double _lastNewMailCheckAllowedTime;
    NSString *_mailboxName;
    IMAPMailbox *_IMAPMailbox;
    id _cachedDirLock;
    NSMutableDictionary *_cachedDirContents;
    struct __FSEventStream *_cachedDirstream;
    NSOperationQueue *_cachedDirectoryOperationQueue;
    IMAPDownloadCache *_downloadCache;
    IMAPCommandPipeline *_fetchPipeline;
    IMAPMailboxSyncEngine *_syncEngine;
    NSLock *_copyLock;
    NSMutableArray *_pendingCompacts;
    InvocationQueue *_pendingCompactsQueue;
    NSMutableDictionary *_recentFlagChangesByMessageID;
    NSMutableArray *_recentlyDeletedMessageIDs;
    unsigned long long _totalCount;
    BOOL _supportsCustomPermanentFlags;
    BOOL _readyToDealloc;
    BOOL _isOpenedByUser;
}

+ (id)_newDataFromMimePart:(id)arg1 threshold:(unsigned long long)arg2;
- (id)initWithCriterion:(id)arg1 mailbox:(id)arg2 readOnly:(BOOL)arg3;
- (void)dealloc;
- (void)finalize;
- (id)_IMAPMailbox;
- (id)_copyMailboxSyncEngineCreateIfNecessary:(BOOL)arg1 setupGatewayIfNecessary:(BOOL)arg2;
- (BOOL)_isRebuildingOrSynchronizing;
- (BOOL)_isSynchronized;
- (unsigned long long)_permanentFlags;
- (id)messagesForImporter;
- (void)openAsynchronously;
- (void)openSynchronouslyUpdatingMetadata:(BOOL)arg1 withOptions:(unsigned long long)arg2;
- (void)openSynchronouslyUpdatingMetadata:(BOOL)arg1;
- (void)openSynchronouslyWithoutUserInteraction;
- (id)willDealloc;
- (BOOL)setStoreState:(int)arg1 fromState:(int)arg2;
- (void)_invalidate;
- (BOOL)_shouldCallCompactWhenClosing;
- (void)_fetchForCheckingNewMail:(BOOL)arg1;
- (void)checkNewMail;
- (void)fetchSynchronously;
- (void)fetchSynchronouslyForKnownChanges;
- (void)cleanupSynchronously;
- (void)doRoutineCleanup;
- (BOOL)canRebuild;
- (void)removeAllLocalMessages;
- (id)mailboxName;
- (BOOL)canCompact;
- (void)doCompact;
- (void)_processPendingCompacts;
- (void)compactMessages:(id)arg1;
- (void)compactMessagesFromSyncEngine:(id)arg1;
- (void)deleteMessagesOlderThanNumberOfDays:(long long)arg1 compact:(BOOL)arg2;
- (void)deleteLastMessageWithHeaders:(id)arg1 compactWhenDone:(BOOL)arg2;
- (void)undeleteMessagesWithRemoteIDs:(id)arg1;
- (BOOL)allowsAppend;
- (BOOL)allowsOverwrite;
- (void)_copyFlagsFromMessages:(id)arg1 flagsByMessage:(id)arg2 toMessagesWithUids:(id)arg3 withGateway:(id)arg4 usedFlags:(id)arg5;
- (BOOL)_copyMessagesByID:(id)arg1 toStore:(id)arg2 settingFlags:(id)arg3 newMessages:(id)arg4 error:(id *)arg5;
- (int)_appendToServerWithContext:(CDStruct_9f3328ff *)arg1 error:(id *)arg2;
- (id)_uidSearchForMessageIds:(id)arg1 destinationUidNext:(unsigned int)arg2 withGateway:(id)arg3;
- (int)undoAppendOfMessageIDs:(id)arg1;
- (id)newDictionaryForLocalFlags:(unsigned int)arg1 serverFlags:(unsigned int)arg2 existingDictionary:(id)arg3;
- (void)_synchronouslyStoreFlagsFromDictionary:(id)arg1 forMessages:(id)arg2;
- (void)_setFlagsFromDictionary:(id)arg1 forMessages:(id)arg2;
- (id)recentFlagChangesForMessageID:(id)arg1;
- (id)async_setFlagsFromDictionary:(id)arg1 forMessages:(id)arg2;
- (id)async_setFlagsFromDictionary:(id)arg1 forMessages:(id)arg2 updatingServer:(BOOL)arg3;
- (void)_internalSetFlagsFromDictionary:(id)arg1 forMessages:(id)arg2;
- (void)syncEngineDidSynchronizeMessageList;
- (BOOL)setPreferredEncoding:(unsigned int)arg1 forMessage:(id)arg2;
- (id)_dataForMessage:(id)arg1 readHeadersOnly:(BOOL)arg2;
- (id)_fetchDataForMimePart:(id)arg1 keepInMemory:(BOOL)arg2 writeToDisk:(BOOL)arg3;
- (id)dataForMimePart:(id)arg1;
- (void)_updateCacheInfoForPath:(id)arg1 scanSubDirectories:(BOOL)arg2;
- (id)_getCacheDirectoryContents;
- (BOOL)_hasCachedDataForMimePart:(id)arg1 message:(id)arg2;
- (id)cacheDirectoryContents;
- (BOOL)hasCachedDataForMimePart:(id)arg1;
- (id)fullBodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id *)arg2 fetchIfNotAvailable:(BOOL)arg3;
- (id)_waitForDataFromDownload:(id)arg1 uid:(unsigned int)arg2 gateway:(id)arg3;
- (id)_fetchBodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id *)arg2 fetchIfNotAvailable:(BOOL)arg3;
- (id)_fetchHeaderDataForMessage:(id)arg1 fetchIfNotAvailable:(BOOL)arg2;
- (id)colorForMessage:(id)arg1;
- (id)messageForMessageID:(id)arg1;
- (unsigned int)maximumRemoteIDForMailbox:(id)arg1;
- (id)getDetailsForMessagesWithRemoteIDs:(id)arg1 fromMailbox:(id)arg2;
- (BOOL)hasCacheFileForMessage:(id)arg1 part:(id)arg2 directoryContents:(id)arg3;
- (BOOL)hasCacheFileForMessage:(id)arg1 directoryContents:(id)arg2;
- (void)compactMailbox:(id)arg1;
- (id)messagesForMailbox:(id)arg1 where:(id)arg2 sortedBy:(id)arg3 ascending:(BOOL)arg4 options:(unsigned int)arg5;
- (id)duplicateMessages:(id)arg1 newRemoteIDs:(id)arg2 newDocumentIDs:(id)arg3 forMailbox:(id)arg4 setFlags:(long long)arg5 clearFlags:(long long)arg6 messageFlagsForMessages:(id)arg7 createNewCacheFiles:(BOOL)arg8;
- (id)duplicateMessages:(id)arg1 newRemoteIDs:(id)arg2 newDocumentIDs:(id)arg3 forMailbox:(id)arg4 setFlags:(long long)arg5 clearFlags:(long long)arg6 createNewCacheFiles:(BOOL)arg7;
- (id)messageWithRemoteID:(id)arg1 inRemoteMailbox:(id)arg2;
- (void)setBackgroundColorForMessages:(id)arg1 textColorForMessages:(id)arg2;
- (BOOL)canSetMessageColors;
- (BOOL)messageHasBeenDeleted:(id)arg1;
- (id)_gatewayCreateIfNeeded:(BOOL)arg1 options:(int)arg2;
- (void)startSynchronization;
- (id)_uidIndexSetForMessages:(id)arg1;
- (void)_updateLastNewMailCheckAllowedTime;
- (void)_updateFlagsIfNeededWithGateway:(id)arg1;
- (void)_retrieveNewMessagesForCheckingNewMail:(BOOL)arg1;
- (void)forceResync;
- (id)_preferredOrderForFetchingMessageBodies:(id)arg1;
- (BOOL)hasValidCacheFileForMessage:(id)arg1;
- (BOOL)hasValidCacheFileForUid:(unsigned int)arg1;
- (id)copyOfOldCachedMessagesContentsForUid:(unsigned int)arg1;
- (void)setUid:(unsigned int)arg1 forMessageWithTemporaryUid:(unsigned int)arg2;
- (id)_copyOfAllMessagesSortedByUidWithOptions:(unsigned int)arg1;
- (id)_deletedMessages;
- (void)writeUpdatedMessageDataToDisk;
- (id)sortOrder;
- (BOOL)isSortedAscending;
- (void)propagateMessagesWereAdded:(id)arg1 conversationsMembers:(id)arg2 duringOpen:(BOOL)arg3;
- (void)messagesWereAdded:(id)arg1 conversationsMembers:(id)arg2 duringOpen:(BOOL)arg3;
- (void)_setBackgroundColorForMessages:(id)arg1 textColorForMessages:(id)arg2;
- (id)fetchPipeline;
- (id)downloadCache;
- (id)messagesBeingRouted;
- (id)_imapAccount;
- (id)_offlineCache;
- (id)offlineCacheIfOffline;
- (void)updateCountFromMailbox:(id)arg1 fromIDLE:(BOOL)arg2;
- (void)processResponsesFromMailbox:(id)arg1;
- (void)updateUidValidityFromMailbox:(id)arg1;
- (void)_updateCountFromMailbox:(id)arg1 fromIDLE:(id)arg2;
- (void)_processResponsesFromMailbox:(id)arg1;
- (void)_updateUidValidityFromMailbox:(id)arg1;
- (void)updateSelectedGatewayFromMailbox:(id)arg1;
@property unsigned long long totalCount; // @synthesize totalCount=_totalCount;
@property BOOL isOpenedByUser; // @synthesize isOpenedByUser=_isOpenedByUser;
- (id)objectSpecifierForMessage:(id)arg1;

@end

