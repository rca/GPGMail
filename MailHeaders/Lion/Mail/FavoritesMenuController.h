/*
 *     Generated by class-dump 3.3.3 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2010 by Steve Nygard.
 */



#import "NSOutlineViewDataSource-Protocol.h"
#import "NSOutlineViewDelegate-Protocol.h"

@class FavoritesMenuOutlineView, MailboxUid, NSScrollView, NSTimer, NSView, NSWindow;

@interface FavoritesMenuController : NSObject <NSOutlineViewDataSource, NSOutlineViewDelegate>
{
    NSWindow *_window;
    NSWindow *_parentWindow;
    MailboxUid *_mailbox;
    NSScrollView *_scrollView;
    FavoritesMenuOutlineView *_outlineView;
    id _mouseClickedMonitor;
    id _delegate;
    BOOL _isOpeningMenu;
    NSView *_upScrollHoverView;
    NSView *_downScrollHoverView;
    BOOL _needsScrollers;
    BOOL _isScrolling;
    NSTimer *_scrollTimer;
}

+ (void)closeExitingMenu;
- (id)initWithMailbox:(id)arg1 atWindow:(id)arg2;
- (void)_cleanupMenu;
- (void)dealloc;
- (void)closePopup;
- (void)_applicationShouldClosePopup:(id)arg1;
- (void)_dragEnded:(id)arg1;
- (void)_mouseClickedInApplicationWithEvent:(id)arg1;
- (struct CGSize)_windowSizeForOutlineViewSize:(struct CGSize)arg1;
- (void)_sizeWindowToFitCells;
- (void)_constrainWindowToScreen;
- (void)_insertOutlineViewInScrollView;
- (void)presentPopupAtLocation:(struct CGPoint)arg1;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (id)outlineView:(id)arg1 dataCellForTableColumn:(id)arg2 item:(id)arg3;
- (BOOL)outlineView:(id)arg1 shouldShowOutlineCellForItem:(id)arg2;
- (unsigned long long)_dragOperationForCurrentEvent;
- (unsigned long long)outlineView:(id)arg1 validateDrop:(id)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (BOOL)_canDragMessageIntoMailbox:(id)arg1;
- (BOOL)outlineView:(id)arg1 acceptDrop:(id)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (void)_scrollToNextPoint:(id)arg1;
- (void)updateScrollArrows;
- (void)startScrolling:(unsigned long long)arg1;
- (void)stopScrolling;
- (void)stopScrolling:(unsigned long long)arg1;
@property(readonly) BOOL isScrolling; // @synthesize isScrolling=_isScrolling;
@property id delegate; // @synthesize delegate=_delegate;

@end

