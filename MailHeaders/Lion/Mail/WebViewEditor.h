/*
 *     Generated by class-dump 3.3.3 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2010 by Steve Nygard.
 */



#import "EditingMessageWebViewDelegate-Protocol.h"

@class ComposeBackEnd, DOMHTMLAnchorElement, DocumentEditor, EditableWebMessageDocument, EditingMessageWebView, EditingWebMessageController, HyperlinkEditor, NSArray, NSDictionary, NSMutableSet, WebFrame;

@interface WebViewEditor : NSObject <EditingMessageWebViewDelegate, NSUserInterfaceValidations>
{
    EditingMessageWebView *_webView;
    DocumentEditor *_documentEditor;
    ComposeBackEnd *_backEnd;
    HyperlinkEditor *_hyperlinkEditor;
    EditingWebMessageController *_messageController;
    WebFrame *_frameAllowedToLoadContent;
    NSArray *_attachmentsForContextualMenu;
    NSMutableSet *_largeFilesAddedWhileEditing;
    BOOL _finalSpellCheckingIsInProgress;
    BOOL _containsRichText;
    BOOL _containsRichTextFlagIsValid;
    BOOL _needToCheckRichnessInRange;
    NSDictionary *_infoForRichnessTest;
    DOMHTMLAnchorElement *_linkWhoseTextIsBeingEdited;
}

- (id)init;
- (void)awakeFromNib;
- (void)dealloc;
- (void)earlySetUp;
- (void)setUp;
- (void)close;
- (id)webView;
@property(readonly) BOOL useDesignMode;
- (id)documentEditor;
- (void)setBackEnd:(id)arg1;
@property(readonly) EditableWebMessageDocument *document;
- (void)setMessageController:(id)arg1;
- (void)setFrameAllowedToLoadContent:(id)arg1;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;
- (id)webView:(id)arg1 resource:(id)arg2 willSendRequest:(id)arg3 redirectResponse:(id)arg4 fromDataSource:(id)arg5;
- (void)setInlineSpellCheckingEnabled:(BOOL)arg1;
- (void)setCheckGrammarWithSpelling:(BOOL)arg1;
- (BOOL)startFinalSpellCheck;
- (void)endFinalSpellCheck;
- (void)finalSpellCheckCompleted:(id)arg1;
- (void)setFinalSpellCheckingIsInProgress:(BOOL)arg1;
- (BOOL)finalSpellCheckingIsInProgress;
- (void)updateIgnoredWordsForHeader:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)_editLink;
- (void)editLink:(id)arg1;
- (void)editLink;
- (void)_continueEditLink:(id)arg1 returnCode:(long long)arg2 contextInfo:(id)arg3;
- (void)removeSelectedLink;
- (void)webViewDidChangeSelection:(id)arg1;
- (void)insertList:(id)arg1;
@property(readonly) BOOL allowQuoting;
- (void)increaseIndentation;
- (void)decreaseIndentation;
- (void)changeIndentationIfAllowed:(long long)arg1;
- (void)_continueChangeIndentation:(id)arg1 returnCode:(long long)arg2 contextInfo:(id)arg3;
- (BOOL)selectionIsInList;
- (BOOL)selectionIsInListTypes:(id)arg1;
- (BOOL)_selectionIsInEmptyListItem;
- (void)insertNumberedList:(id)arg1;
- (void)insertBulletedList:(id)arg1;
- (void)insertListWithNumbers:(BOOL)arg1 undoTitle:(id)arg2;
- (void)_continueInsertListWithNumbers:(id)arg1 returnCode:(long long)arg2 contextInfo:(id)arg3;
- (void)convertToNumberedList:(id)arg1;
- (void)convertToBulletedList:(id)arg1;
- (void)increaseListNestingLevel:(id)arg1;
- (void)decreaseListNestingLevel:(id)arg1;
- (void)_setFloat:(id)arg1 ofNode:(id)arg2 inView:(id)arg3 undoTitle:(id)arg4;
- (void)setFloat:(id)arg1 ofNode:(id)arg2 inView:(id)arg3 undoTitle:(id)arg4;
- (void)_continueSetFloat:(id)arg1 returnCode:(long long)arg2 contextInfo:(id)arg3;
- (BOOL)webView:(id)arg1 shouldShowDeleteInterfaceForElement:(id)arg2;
- (BOOL)webView:(id)arg1 canInsertFromPasteboard:(id)arg2 forDrag:(BOOL)arg3;
@property BOOL allowsRichText;
- (void)removeAllFormattingFromWebView;
@property BOOL containsRichText;
- (void)invalidateRichTextCache;
- (void)changeComposeModeInBackEndAndView:(long long)arg1;
- (void)_checkRichnessForEditedRange:(id)arg1;
- (BOOL)webView:(id)arg1 shouldDeleteDOMRange:(id)arg2;
- (void)webViewDidInsertRichText:(id)arg1;
- (BOOL)webView:(id)arg1 shouldApplyStyle:(id)arg2 toElementsInDOMRange:(id)arg3;
- (void)continueShouldApplyStyle:(id)arg1 returnCode:(long long)arg2 contextInfo:(id)arg3;
- (id)alertForConvertingToRichText;
- (void)beginConvertToRichTextAlert:(id)arg1 context:(id)arg2;
- (void)convertToRichAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(id)arg3;
@property(readonly) BOOL isSelectionEditable;
- (void)appendFragment:(id)arg1 toDocument:(id)arg2 asQuote:(BOOL)arg3;
- (void)appendParsedMessage:(id)arg1 toDocument:(id)arg2 asQuote:(BOOL)arg3;
- (void)appendAttributedString:(id)arg1 toDocument:(id)arg2 asQuote:(BOOL)arg3;
- (BOOL)webView:(id)arg1 shouldInsertText:(id)arg2 replacingDOMRange:(id)arg3 givenAction:(int)arg4;
- (BOOL)webView:(id)arg1 shouldInsertNode:(id)arg2 replacingDOMRange:(id)arg3 givenAction:(int)arg4;
- (void)webViewDidChange:(id)arg1;
- (BOOL)webView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (id)_validRangeFromSelection:(id)arg1;
- (id)webView:(id)arg1 shouldReplaceSelectionWithWebArchive:(id)arg2 givenAction:(int)arg3;
- (BOOL)webView:(id)arg1 shouldInsertAttachments:(id)arg2 context:(id)arg3;
- (void)webViewMainDocumentBaseURIDidChange:(id)arg1;
- (BOOL)webViewShouldReplaceSelectionWithContentsOfWebpage:(id)arg1;
- (void)webViewWillInsertContentsOfWebpage:(id)arg1;
- (void)webView:(id)arg1 didAddMailAttachment:(id)arg2;
- (void)webView:(id)arg1 willRemoveMailAttachment:(id)arg2;
- (BOOL)removeAttachmentsLeavingPlaceholder:(BOOL)arg1;
- (void)replaceRiskyAttachmentsWithLinks;
- (id)selectedAttachments;
- (id)attachmentForEvent:(id)arg1;
- (id)selectedAttachmentNode;
- (id)directoryForAttachment:(id)arg1;
- (void)removeAttachments:(id)arg1;
- (void)viewAttachments:(id)arg1 inLine:(BOOL)arg2;
- (void)redisplayChangedAttachment:(id)arg1;
- (void)addAttachmentsForFiles:(id)arg1;
- (void)insertAttributedStringOfAttachments:(id)arg1 allAttachmentsAreOkay:(BOOL)arg2;
- (BOOL)_isOkayToInsertAttachment:(id)arg1;
- (void)replaceSelectionWithFragment:(id)arg1;
- (void)pasteAsMarkup;
- (void)saveDocument:(id)arg1;
- (void)saveChangedDocument:(id)arg1;
- (id)largeFilesAddedWhileEditing;
- (void)largeFileAdded:(id)arg1;
- (void)webViewWillStartLiveResize:(id)arg1;
- (void)webViewDidEndLiveResize:(id)arg1;
@property(readonly) ComposeBackEnd *composeBackEnd; // @synthesize composeBackEnd=_backEnd;
@property(retain) NSDictionary *infoForRichnessTest; // @synthesize infoForRichnessTest=_infoForRichnessTest;

@end

