/*
 *     Generated by class-dump 3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.
 */

#import <Mail/MFAccount.h>

#import "MCAccountSetupValidatorDelegate.h"
#import "MCActivityTarget.h"
#import "MCMailAccount.h"
#import "MFMessageDelivererDelegate.h"
#import "NSFileManagerDelegate.h"

@class MCAccountSetupValidator, MCAuthScheme, MCError, MFMailbox, NSArray, NSString, NSTimer, NSURL;

@interface MFMailAccount : MFAccount <MCAccountSetupValidatorDelegate, MCActivityTarget, MCMailAccount, MFMessageDelivererDelegate, NSFileManagerDelegate>
{
    id _mailAccountLock;
    NSString *_path;
    id _mailboxLock;
    MFMailbox *_inboxMailbox;
    MFMailbox *_rootMailbox;
    MFMailbox *_draftsMailbox;
    MFMailbox *_sentMessagesMailbox;
    MFMailbox *_trashMailbox;
    MFMailbox *_junkMailbox;
    MFMailbox *_notesMailbox;
    MFMailbox *_todosMailbox;
    MFMailbox *_outboxMailbox;
    MFMailbox *_archiveMailbox;
    MCError *_lastConnectionError;
    id _cacheChangeLock;
    NSTimer *_cacheWriteTimer;
    id _backgroundActivityFlagsLock;
    BOOL _backgroundFetchInProgress;
    BOOL _cacheHasBeenRead;
    BOOL _mailboxListInitializationInProgress;
    BOOL _needsChecking;
    MCAccountSetupValidator *_validator;
}

+ (id)keyPathsForValuesAffecting_URLPersistenceHostname;
+ (id)_outboxMailbox;
+ (void)_setOutboxMailbox:(id)arg1;
+ (id)_mailboxNameForPathComponent:(id)arg1;
+ (id)_pathComponentForMailboxName:(id)arg1;
+ (void)_postMailAccountsHaveChanged;
+ (id)_accountWithPath:(id)arg1 relativePath:(id *)arg2;
+ (void)_enableMailboxListingNotifications:(BOOL)arg1;
+ (void)_disableMailboxListingNotifications;
+ (BOOL)_mailboxListingNotificationAreEnabled;
+ (void)setAllEmailAddresses:(id)arg1 withFullUserNames:(id)arg2;
+ (BOOL)_mailAccountsAreInitialized;
+ (void)_normalizePathComponentsInMailboxesDictionary:(id)arg1 accountClass:(Class)arg2;
+ (void)normalizeMailboxPathComponentsInAllAccounts;
+ (id)mailboxForURL:(id)arg1 forceCreation:(BOOL)arg2 syncableURL:(BOOL)arg3;
+ (id)accountWithURLString:(id)arg1 includeInactiveAccounts:(BOOL)arg2;
+ (id)accountWithURLString:(id)arg1;
+ (id)URLForInfo:(id)arg1;
+ (id)infoForURL:(id)arg1;
+ (id)_accountForURL:(id)arg1;
+ (id)accountWithSyncableURLString:(id)arg1 includeInactiveAccounts:(BOOL)arg2;
+ (id)_accountForURL:(id)arg1 includeInactiveAccounts:(BOOL)arg2;
+ (void)_inferMissingCanonicalEmailAddressesForAccounts:(id)arg1 usingEmailAddresses:(id)arg2;
+ (void)inferMissingCanonicalEmailAddresses;
+ (void)deleteMailboxIfEmpty:(id)arg1;
+ (id)mailboxForFileSystemPath:(id)arg1 create:(BOOL)arg2;
+ (void)resetAllSpecialMailboxes;
+ (void)synchronouslyEmptyMailboxType:(int)arg1 inAccounts:(id)arg2;
+ (BOOL)allAccountsDeleteInPlace;
+ (long long)numberOfDaysToKeepLocalTrash;
+ (void)_clearAllAccountBackgroundFetchInProgress;
+ (id)accountsInitializingMailboxList;
+ (void)connectAllAccounts;
+ (void)disconnectAllAccounts;
+ (void)_setOnlineStateOfAllAccountsTo:(BOOL)arg1;
+ (BOOL)isAnyAccountOnline;
+ (BOOL)isAnyAccountOffline;
+ (id)defaultDeliveryAccount;
+ (id)defaultPathNameForAccountWithHostname:(id)arg1 username:(id)arg2;
+ (id)defaultPathNameForAccount;
+ (id)defaultAccountDirectory;
+ (id)defaultPathForAccountWithHostname:(id)arg1 username:(id)arg2;
+ (id)newAccountWithPath:(id)arg1;
+ (id)accountWithPath:(id)arg1;
+ (id)allMailboxes;
+ (id)archiveMailboxes;
+ (id)junkMailboxes;
+ (id)draftMailboxes;
+ (id)sentMessagesMailboxes;
+ (id)outboxMailboxes;
+ (id)trashMailboxes;
+ (id)inboxMailboxes;
+ (id)_specialMailboxesUsingBlock:(id)arg1;
+ (id)specialMailboxes;
+ (id)outboxMessageStore:(BOOL)arg1;
+ (id)accountThatReceivedMessage:(id)arg1 matchingEmailAddress:(id *)arg2 fullUserName:(id *)arg3;
+ (id)preferredEmailAddressToReplyToMessage:(id)arg1;
+ (id)addressesThatReceivedMessage:(id)arg1;
+ (id)accountThatMessageIsFrom:(id)arg1;
+ (id)accountUsingHeadersFromMessage:(id)arg1;
+ (id)accountForHeaders:(id)arg1 message:(id)arg2;
+ (id)accountContainingEmailAddress:(id)arg1;
+ (id)_accountContainingEmailAddress:(id)arg1 matchingAddress:(id *)arg2 fullUserName:(id *)arg3;
+ (void)resetAccountExistsForSigning;
+ (BOOL)accountExistsForSigning;
+ (void)_updateAccountExistsForSigning;
+ (BOOL)isEmailAddressInAnyAccount:(id)arg1;
+ (id)allEmailAddressesIncludingFullUserName:(BOOL)arg1;
+ (id)_urlFromObject:(id)arg1;
+ (BOOL)setAccountInfo:(id)arg1 forAccountMatchingInfo:(id)arg2;
+ (id)_accountFromArray:(id)arg1 withType:(id)arg2 hostname:(id)arg3 username:(id)arg4;
+ (id)existingAccountWithType:(id)arg1 hostname:(id)arg2 username:(id)arg3;
+ (id)_accountFromArray:(id)arg1 withIdentifier:(id)arg2;
+ (id)accountWithIdentifier:(id)arg1;
+ (void)migrateUnreadCountInMailboxCache;
+ (void)saveAccountInfoToDefaults;
+ (id)remoteAccounts;
+ (BOOL)onlyGmailAccountsUsingAllMailAsArchiveAreActive;
+ (id)activeAccounts;
+ (id)_activeAccountsFromArray:(id)arg1;
+ (void)_removeAccountFromSortedPaths:(id)arg1;
+ (id)syncManagedAccountWithMCXCreateIfAbsent:(BOOL)arg1;
+ (void)setTotalCountOfMessagesReceived:(unsigned long long)arg1;
+ (unsigned long long)totalCountOfMessagesReceived;
+ (void)setCountOfNewUnreadMessagesReceivedInInbox:(unsigned long long)arg1;
+ (unsigned long long)countOfNewUnreadMessagesReceivedInInbox;
+ (void)setNewUnreadMessagesReceivedInInbox:(BOOL)arg1;
+ (BOOL)newUnreadMessagesReceivedInInbox;
+ (void)accountsWereSynced;
+ (void)setIsActive:(BOOL)arg1 forAccountWithIdentifier:(id)arg2;
+ (id)removeMailAccountFromAccountStorageWithIdentifier:(id)arg1;
+ (void)addMailAccount:(id)arg1;
+ (void)_setMailAccounts:(id)arg1 reloadingFromStorage:(BOOL)arg2;
+ (void)setMailAccounts:(id)arg1;
+ (void)reloadMailAccounts;
+ (id)mailAccounts;
+ (id)allMailAccounts;
+ (id)_mailAccountsIncludingUnknownTypes;
+ (void)_setupSortedPathsForAccounts:(id)arg1;
+ (void)_addAccountToSortedPaths:(id)arg1;
+ (void)completeDeferredAccountInitialization;
+ (BOOL)haveAccountsBeenConfigured;
+ (BOOL)accountsHaveBeenInitialized;
+ (void)initialize;
@property(retain) MCAccountSetupValidator *validator; // @synthesize validator=_validator;
- (void).cxx_destruct;
- (BOOL)_validateIfNeeded;
- (id)iaSettingsIncludingPassword:(BOOL)arg1;
- (id)rootMailboxEvenIfInactive:(BOOL)arg1;
- (id)_mailboxPathPrefix:(BOOL)arg1;
- (id)_URLForInfo:(id)arg1;
- (id)_URLPersistenceHostname;
- (id)_URLExternalConnectionScheme;
- (id)_URLInternalConnectionScheme;
- (id)_URLPersistenceScheme;
- (id)_infoForMatchingURL:(id)arg1;
- (BOOL)_shouldLogDeleteActivity;
- (BOOL)_canEmptyMessagesFromMailbox:(id)arg1;
- (id)_specialMailboxWithType:(int)arg1 create:(BOOL)arg2;
- (id)_specialMailboxRelativePathForType:(int)arg1;
- (void)_setSpecialMailbox:(id)arg1 forType:(int)arg2;
- (void)_setSpecialMailboxRelativePath:(id)arg1 forType:(int)arg2;
- (BOOL)_assignSpecialMailboxToAppropriateIvar:(id)arg1 forType:(int)arg2;
- (id)_defaultSpecialMailboxRelativePathForType:(int)arg1;
- (void)_clearAllPathBasedCachesAndDelete:(BOOL)arg1;
- (void)_emptySpecialMailboxesIfNeededForQuit:(BOOL)arg1;
- (void)_emptySpecialMailboxesIfNeeded;
- (void)backgroundFetchCompleted;
- (void)_fetchSynchronouslyIfNeeded;
- (BOOL)_deleteMailbox:(id)arg1 reflectToServer:(BOOL)arg2;
- (BOOL)_setChildren:(id)arg1 addedChild:(id)arg2 forMailbox:(id)arg3;
- (BOOL)_setChildren:(id)arg1 forMailbox:(id)arg2;
- (id)_insertMailbox:(id)arg1 intoParent:(id)arg2 withDisplayName:(id)arg3;
- (void)_writeMailboxCache;
- (void)_loadEntriesFromFileSystemPath:(id)arg1 parent:(id)arg2;
- (void)_finishSynchronizingMailboxesAfterImport;
- (void)_synchronizeMailboxListWithFileSystemBeforeImport;
- (void)_synchronizeMailboxListWithFileSystem;
- (void)_synchronizeMailboxListWithFileSystemBeforeImport:(BOOL)arg1;
- (BOOL)_readMailboxCache;
- (BOOL)_usesMailboxCache;
- (void)_mailboxesWereRemovedFromTree:(id)arg1 withFileSystemPaths:(id)arg2;
- (void)_loadMailboxListingIntoCache:(id)arg1 parent:(id)arg2 addedMailboxes:(id)arg3 removedMailboxes:(id)arg4;
- (void)_synchronouslyLoadListingForParent:(id)arg1;
- (id)_copyMailboxWithParent:(id)arg1 name:(id)arg2 pathComponent:(id)arg3 attributes:(unsigned long long)arg4 existingMailbox:(id)arg5;
- (void)_writeCustomInfoToMailboxCache:(id)arg1;
- (void)_readCustomInfoFromMailboxCache:(id)arg1;
- (void)_postMailAccountsHaveChangedIfNeeded;
- (void)setIsActive:(BOOL)arg1;
- (BOOL)_setPath:(id)arg1;
- (void)messageDeliveryDidFinish:(id)arg1;
- (id)delegateApplicationName;
- (void)validatorDidFinish:(id)arg1;
- (void)validatorDidFail:(id)arg1;
- (void)_validatorFailedToAuthenticate:(id)arg1;
- (void)validator:(id)arg1 didChangeState:(long long)arg2;
@property BOOL validationRequired;
- (BOOL)connectAndAuthenticate:(id)arg1;
- (long long)compareIAOrder:(id)arg1;
- (void)respondToHostBecomingReachable;
- (BOOL)storesUnseenCount;
- (BOOL)supportsAppleScript;
- (BOOL)hasTrashMailbox;
- (BOOL)isGmailAccount;
- (BOOL)isRemoteAccount;
- (BOOL)isZeroConfiguration;
- (BOOL)providesAccountInformation;
- (BOOL)canParticipateInRules;
- (BOOL)isEditableByUser;
- (BOOL)synchronizesDataWithServer;
- (id)syncableURLString;
- (id)URLString;
- (id)objectSpecifier;
- (id)objectSpecifierForMailbox:(id)arg1;
- (id)objectSpecifierForMessageStore:(id)arg1;
- (id)valueInMailboxesWithName:(id)arg1;
- (id)mailboxForRelativePath:(id)arg1 isFilesystemPath:(BOOL)arg2 create:(BOOL)arg3;
- (Class)storeClassForMailbox:(id)arg1;
- (id)storeForMailbox:(id)arg1 createIfNeeded:(BOOL)arg2;
- (id)storeForMailbox:(id)arg1;
- (void)_autodiscoveredSSLSetting:(id)arg1 portNumberSetting:(id)arg2 otherSettingsChanged:(BOOL)arg3 needToResetMailboxURLs:(BOOL)arg4;
- (BOOL)autodiscoverSettings:(id *)arg1;
- (id)connectionError;
- (void)setConnectionError:(id)arg1;
- (void)accountInfoDidChange;
@property long long portNumber;
@property(copy) NSString *hostname;
@property(copy) NSString *username;
- (void)_resetAllMailboxURLs;
- (void)invalidateChildrenOfMailbox:(id)arg1;
- (BOOL)deleteMailbox:(id)arg1 reflectToServer:(BOOL)arg2;
- (BOOL)renameMailbox:(id)arg1 newDisplayName:(id)arg2 parent:(id)arg3;
- (id)createMailboxWithParent:(id)arg1 displayName:(id)arg2 localizedDisplayName:(id)arg3;
- (id)createMailboxWithParent:(id)arg1 name:(id)arg2;
- (BOOL)deleteConvertsStoreToFolder;
- (BOOL)supportsNormalContainerOnlyMailboxes;
- (BOOL)canMailboxBeDeleted:(id)arg1;
- (BOOL)canMailboxBeRenamed:(id)arg1;
- (id)validNameForMailbox:(id)arg1 fromDisplayName:(id)arg2 error:(id *)arg3;
- (BOOL)supportsSlashesInMailboxName;
- (BOOL)canMoveMailboxes;
- (BOOL)canCreateNewMailboxes;
- (id)mailboxPathExtension;
- (BOOL)resetSpecialMailboxes;
- (BOOL)containsMailboxes;
- (id)displayNameForMailbox:(id)arg1;
@property(copy) NSString *displayName;
- (void)emptySpecialMailboxesThatNeedToBeEmptiedAtQuit;
- (BOOL)canMoveDeletedMessagesToTrash;
- (void)setShouldMoveDeletedMessagesToTrash:(BOOL)arg1;
- (BOOL)shouldMoveDeletedMessagesToTrash;
- (void)setEmptyTrashFrequency:(long long)arg1;
- (long long)emptyTrashFrequency;
- (void)setEmptyJunkFrequency:(long long)arg1;
- (long long)emptyJunkFrequency;
- (void)setEmptySentMessagesFrequency:(long long)arg1;
- (long long)emptySentMessagesFrequency;
- (void)_setEmptyFrequency:(long long)arg1 forKey:(id)arg2;
- (long long)_emptyFrequencyForKey:(id)arg1 defaultValue:(long long)arg2;
- (void)deleteMessagesFromMailbox:(id)arg1 olderThanNumberOfDays:(long long)arg2;
- (void)setToDosMailbox:(id)arg1;
- (void)setArchiveMailbox:(id)arg1;
- (void)setNotesMailbox:(id)arg1;
- (void)setSentMessagesMailbox:(id)arg1;
- (void)setJunkMailbox:(id)arg1;
- (void)setTrashMailbox:(id)arg1;
- (void)setDraftsMailbox:(id)arg1;
- (id)allMailboxesEvenIfInactive:(BOOL)arg1;
- (id)allMailboxes;
- (id)_outboxMailboxCreateIfNeeded:(BOOL)arg1;
- (id)archiveMailboxCreateIfNeeded:(BOOL)arg1;
- (id)trashMailboxCreateIfNeeded:(BOOL)arg1;
- (id)sentMessagesMailboxCreateIfNeeded:(BOOL)arg1;
- (id)junkMailboxCreateIfNeeded:(BOOL)arg1;
- (id)draftsMailboxCreateIfNeeded:(BOOL)arg1;
- (id)inboxMailboxCreateIfNeeded:(BOOL)arg1;
- (BOOL)rootChildrenCanBePromoted;
@property(readonly) BOOL rootMailboxExists;
- (BOOL)mailboxIsRootMailbox:(id)arg1;
- (id)rootMailbox;
- (id)primaryMailbox;
- (void)incrementTotalCountOfMessagesReceived:(unsigned long long)arg1;
- (void)incrementCountOfNewUnreadMessagesReceivedInInbox:(unsigned long long)arg1;
- (void)newUnreadMessagesHaveBeenReceivedInInbox;
- (BOOL)isFetching;
- (void)fetchSynchronouslyIsAuto:(id)arg1;
- (void)fetchSynchronously;
- (void)fetchAsynchronously;
- (void)boostExistingFetchTo:(long long)arg1;
- (void)fetchAsynchronouslyIsAuto:(BOOL)arg1;
- (void)setNeedsChecking;
- (BOOL)needsChecking;
- (void)didInitializeMailboxList;
- (void)willInitializeMailboxList;
- (BOOL)isInitializingMailboxList;
- (BOOL)_supportsMailboxListInitialization;
- (void)synchronizeAllMailboxes;
- (BOOL)canBeSynchronized;
- (BOOL)canAppendMessages;
- (void)startBackgroundSynchronization;
- (id)defaultsDictionary;
- (id)remoteFetchQueue;
- (id)remoteTaskQueue;
- (BOOL)canFetch;
- (void)setIsWillingToGoOnline:(BOOL)arg1;
- (void)setIsOffline:(BOOL)arg1;
- (void)releaseAllConnections;
- (void)setCacheIsDirty:(BOOL)arg1;
- (void)doRoutineCleanup;
- (void)saveCache;
- (void)saveCacheInBackground;
- (void)_setCacheWriteTimer:(id)arg1;
- (void)deleteAccount;
- (void)_synchronouslyInvalidateAndDelete:(BOOL)arg1;
- (BOOL)fileManager:(id)arg1 shouldProceedAfterError:(id)arg2 removingItemAtURL:(id)arg3;
- (BOOL)fileManager:(id)arg1 shouldProceedAfterError:(id)arg2 removingItemAtPath:(id)arg3;
@property BOOL disableRecentsSync;
- (void)setShouldAutoFetch:(BOOL)arg1;
- (BOOL)shouldAutoFetch;
- (id)emailAliases;
- (void)setApplescriptEmailAddresses:(id)arg1;
- (id)applescriptEmailAddresses;
- (void)setEmailAddresses:(id)arg1;
- (id)emailAddresses;
- (id)rawEmailAddresses;
- (id)firstEmailAddress;
- (void)setDeliveryAccountIsLocked:(BOOL)arg1;
- (BOOL)deliveryAccountIsLocked;
- (void)_mailboxUserInfoDidChange:(id)arg1;
- (void)_deliveryAccountWillBeRemoved:(id)arg1;
- (id)dynamicDeliveryAccount;
- (void)setDeliveryAccount:(id)arg1;
- (id)deliveryAccount;
- (void)setSMTPIdentifier:(id)arg1;
- (id)smtpIdentifier;
- (id)localizedDeliveryAccountIgnoringLockedDelivery:(BOOL)arg1;
@property(readonly, copy) NSString *googleClientToken;
- (void)setFullUserName:(id)arg1;
- (id)fullUserName;
- (void)setApplescriptFullUserName:(id)arg1;
- (id)applescriptFullUserName;
- (id)tildeAbbreviatedPath;
- (id)accountDirectory;
- (void)setPath:(id)arg1;
- (id)path;
- (void)_setAccountInfo:(id)arg1;
- (BOOL)isValid;
- (void)completeDeferredInitialization;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithPath:(id)arg1;
- (id)initWithAccountInfo:(id)arg1;
- (id)allMailMailbox;
- (id)_notesMailboxUnlessUsingLocal;
- (id)_todosMailboxUnlessUsingLocal;
- (id)notesMailbox;
- (id)todosMailbox;
- (BOOL)cheapStoreAtPathIsEmpty:(id)arg1;
- (BOOL)hasEmailAddress:(id)arg1;
- (BOOL)isValidAccountWithError:(id)arg1 accountBeingEdited:(id)arg2 userCanOverride:(char *)arg3;
- (id)backupID;
- (void)setEmptyJunkOnQuit:(BOOL)arg1;
- (BOOL)emptyJunkOnQuit;
- (void)setEmptySentMessagesOnQuit:(BOOL)arg1;
- (BOOL)emptySentMessagesOnQuit;
- (void)setEmptyTrashOnQuit:(BOOL)arg1;
- (BOOL)emptyTrashOnQuit;
- (void)removeFromMailboxesAtIndex:(unsigned long long)arg1;
- (void)insertInMailboxes:(id)arg1;
- (void)insertInMailboxes:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)replaceInMailboxes:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)mailboxes;
- (id)indicesOfObjectsByEvaluatingObjectSpecifier:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *accountTypeString;
@property BOOL allowInsecureAuthentication;
@property(readonly, copy) NSString *appleAuthenticationToken;
@property(readonly, copy) NSString *applePersonID;
@property(copy) NSString *canonicalEmailAddress;
@property BOOL configureDynamically;
@property(readonly, copy) NSString *debugDescription;
@property(copy) NSString *externalHostname;
@property(readonly) unsigned long long hash;
@property(readonly, copy) NSString *identifier;
@property(copy) NSString *password;
@property(retain) MCAuthScheme *preferredAuthScheme;
@property(readonly, nonatomic) BOOL requiresAuthentication;
@property(readonly, copy, nonatomic) NSString *saslProfileName;
@property long long securityLayerType;
@property BOOL shouldUseAuthentication;
@property(readonly, copy, nonatomic) NSArray *standardPorts;
@property(readonly, copy, nonatomic) NSArray *standardSSLPorts;
@property(readonly) NSURL *subscriptionURL;
@property(readonly, copy) NSString *subscriptionURLLabel;
@property(readonly) Class superclass;
@property BOOL usesSSL;

@end

